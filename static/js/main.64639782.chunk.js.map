{"version":3,"sources":["pages/Page.tsx","store/animalsFav.ts","components/layout/AppBottomNavigation.tsx","components/layout/ResponsiveAppBottom.tsx","components/layout/TopAuthNav.tsx","hooks/useMobileXS.tsx","components/layout/AppTopBar.tsx","components/layout/AppTopNavigation.tsx","components/layout/ResponsiveAppTop.tsx","pages/PageNotFound.tsx","theme.ts","utils/auth/PrivateRoute.tsx","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","config.ts","utils/authorizedApolloClient.ts","store/index.ts","utils/auth/Auth0ProviderWithHistory.tsx","utils/AuthorizedApolloProvider.tsx","index.tsx","hooks/useMobile.tsx","navigation.ts","store/animalsAll.ts"],"names":["Page","title","topSection","children","displayTitleOnMobile","classes","useStyles","matchesMobile","useMobile","in","timeout","component","className","root","maxWidth","container","spacing","item","xs","PageTitle","content","variant","makeStyles","theme","breakpoints","down","marginTop","up","heading","marginBottom","endAlign","textAlign","fontWeight","display","justifyContent","alignItems","flexDirection","GET_ANIMALS_QUERY","ADD_TO_FAVORITE_ANIMALS_MUTATION","REMOVE_FROM_FAVORITE_ANIMALS_MUTATION","slice","createSlice","name","initialState","page","ids","info","hasNextPage","hasPreviousPage","totalCount","startCursor","endCursor","isLoading","error","queryVars","reducers","startLoadingFav","state","hasErrorFav","action","payload","animalsSuccessFav","animalRemoveFav","pos","indexOf","animalAddFav","lastQueryVarsFav","actions","fetchAnimals","incomingQueryArgs","dispatch","getState","a","apolloClient","queryArgs","isFavoriteOnly","query","fetchPolicy","variables","data","animals","edges","map","node","id","pageInfo","message","addToFavorites","mutate","mutation","animalId","forceReFetchAnimalsForSameContext","removeFromFavorites","toggleFavoriteAnimal","animalsFav","isFavorite","BOTTOM_NAVIGATION_HEIGHT","createStyles","appBar","top","bottom","height","backgroundColor","palette","primary","light","drawerHeader","padding","mixins","toolbar","show","transform","transition","hide","HideOnScroll","props","trigger","useScrollTrigger","appear","direction","AppBottomNavigation","history","useHistory","location","useLocation","React","useState","open","setDrawerOpen","isAuthenticated","useAuth0","handleDrawerClose","position","color","edge","onClick","anchor","onClose","role","navigation","filter","authRequired","button","selected","pathTo","to","pathname","event","push","handleNavListItemClick","ResponsiveAppBottom","TopAuthNav","user","loginWithRedirect","logout","anchorEl","setAnchorEl","Boolean","matchesMobileXS","useTheme","useMediaQuery","useMobileXS","handleClose","Button","currentTarget","startIcon","Typography","label","noWrap","username","words","split","initials","forEach","word","getShortUserName","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","returnTo","window","origin","IconButton","fontSize","appbar","flexGrow","AppTopBar","AppBar","elevation","Toolbar","pages","length","pageTitle","link","margin","textTransform","text","secondary","AppTopNavigation","Fade","Link","NavLink","exact","ResponsiveAppTop","PageNotFound","defaultTheme","createTheme","main","dark","tertiary","values","sm","md","lg","xl","overrides","MuiTypography","h1","lineHeight","h2","h3","h4","h5","h6","MuiListItemIcon","minWidth","MuiStepIcon","fill","success","MuiUseMediaQuery","noSsr","PrivateRoute","otherProps","withAuthenticationRequired","LocationDisplay","minHeight","App","ThemeProvider","MuiTheme","CssBaseline","Suspense","fallback","Skeleton","width","path","lazy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","hostname","match","config","GRAPHQL_URL","process","AUTH0_DOMAIN","AUTH0_CLIENT_ID","AUTH0_AUDIENCE_URL","PUBLIC_URL","auth0","Auth0Client","domain","client_id","redirect_uri","audience","httpLink","createUploadLink","uri","authLink","setContext","getTokenSilently","token","headers","Authorization","console","ApolloClient","concat","cache","InMemoryCache","typePolicies","Query","fields","keyArgs","merge","existing","incoming","connectToDevTools","reducer","combineReducers","animalsAll","store","configureStore","middleware","getDefaultMiddleware","thunk","extraArgument","authorizedApolloClient","serializableCheck","Auth0ProviderWithHistory","clientId","redirectUri","onRedirectCallback","appState","AuthorizedApolloProvider","ApolloProvider","client","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","CREATE_ANIMAL_MUTATION","UPDATE_ANIMAL_MUTATION","objs","pageContext","startLoadingAll","stopLoadingAll","hasErrorAll","animalsSuccessAll","lastQueryVarsAll","animalsContextAll","fetchAnimalsIfNewContext","context","createOrUpdateAnimal","formData","animalInput","makeAnimalInputFromAnimalForm","input","result","comments","registrationNo","details","breedId","breed","genderId","gender","colorId","birthDate"],"mappings":"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","file":"static/js/main.64639782.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\n\nimport { Fade } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport useMobile from '../hooks/useMobile';\n\ninterface PageProps {\n    title?: string | ReactNode;\n    topSection?: ReactNode;\n    // Content\n    children: ReactNode | ReactNode[];\n    displayTitleOnMobile?: boolean;\n}\n\nexport default function Page({ title, topSection, children, displayTitleOnMobile }: PageProps) {\n    const classes = useStyles();\n    const matchesMobile = useMobile();\n\n    return (\n        <Fade in timeout={600}>\n            <Container component=\"main\" className={classes.root} maxWidth=\"lg\">\n                <Grid container spacing={4}>\n                    {(!matchesMobile || displayTitleOnMobile) && title && (\n                        <Grid item xs={12}>\n                            <PageTitle title={title} />\n                        </Grid>\n                    )}\n\n                    {topSection && (\n                        <Grid item xs={12}>\n                            {topSection}\n                        </Grid>\n                    )}\n                    <Grid item xs={12} className={classes.content}>\n                        {children}\n                    </Grid>\n                </Grid>\n            </Container>\n        </Fade>\n    );\n}\n\nfunction PageTitle({ title }: { title: string | ReactNode }) {\n    const classes = useStyles();\n\n    if (typeof title !== 'string') {\n        // Custom title\n        return <>title</>;\n    }\n\n    return (\n        <>\n            <Typography className={classes.title} variant=\"h3\" component=\"h1\">\n                {title}\n            </Typography>\n        </>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.down('md')]: {\n            marginTop: theme.spacing(1),\n        },\n        [theme.breakpoints.up('md')]: {\n            marginTop: 64 + theme.spacing(3), // follow fixed AppBar minHeight: 64\n        },\n        marginBottom: theme.spacing(10),\n    },\n    heading: {\n        marginBottom: theme.spacing(2),\n    },\n    endAlign: {\n        textAlign: 'end',\n    },\n    title: {\n        fontWeight: 500,\n    },\n    content: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n    },\n}));\n","/* eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n\nimport { loader } from 'graphql.macro';\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { PageInfo, QueryAnimalsArgs } from '../graphql/types';\nimport { forceReFetchAnimalsForSameContext } from './animalsAll';\nimport { PagedAnimalsState } from './types-definitions';\n\nconst GET_ANIMALS_QUERY = loader('../graphql/queries/animal-list.graphql');\nconst ADD_TO_FAVORITE_ANIMALS_MUTATION = loader('../graphql/mutations/add-to-favorite-animals.graphql');\nconst REMOVE_FROM_FAVORITE_ANIMALS_MUTATION = loader('../graphql/mutations/remove-from-favorite-animals.graphql');\n\n// Slice\n\nconst initialState: PagedAnimalsState = {\n    page: {\n        ids: [],\n        info: <PageInfo>{\n            hasNextPage: false,\n            hasPreviousPage: false,\n            totalCount: 0,\n            startCursor: '',\n            endCursor: '',\n        },\n    },\n    isLoading: false,\n    error: false,\n    queryVars: {},\n};\n\nconst slice = createSlice({\n    name: 'animalsFav',\n    initialState,\n    reducers: {\n        startLoadingFav: state => {\n            state.isLoading = true;\n        },\n        hasErrorFav: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n        animalsSuccessFav: (state, action) => {\n            state.page.ids = action.payload.ids;\n            state.page.info = action.payload.info;\n            state.isLoading = false;\n        },\n        animalRemoveFav: (state, action) => {\n            const pos = state.page.ids.indexOf(action.payload);\n            state.page.ids = [...state.page.ids.slice(0, pos), ...state.page.ids.slice(pos + 1)];\n        },\n        animalAddFav: (state, action) => {\n            state.page.ids = [...state.page.ids, action.payload];\n        },\n        lastQueryVarsFav: (state, action) => {\n            state.queryVars = action.payload;\n        },\n    },\n});\n\nexport default slice.reducer;\n\n// Actions\n\nconst { animalsSuccessFav, startLoadingFav, hasErrorFav, lastQueryVarsFav, animalRemoveFav, animalAddFav } =\n    slice.actions;\n\nexport const fetchAnimals =\n    (incomingQueryArgs: QueryAnimalsArgs) =>\n    async (dispatch, getState, { apolloClient }) => {\n        dispatch(startLoadingFav());\n\n        const queryArgs = { isFavoriteOnly: true, ...incomingQueryArgs };\n\n        try {\n            const { data } = await apolloClient.query({\n                query: GET_ANIMALS_QUERY,\n                fetchPolicy: 'no-cache',\n                variables: queryArgs,\n            });\n            if (data.animals) {\n                let ids;\n                let info;\n                if (data.animals.edges) {\n                    ids = data.animals.edges.map(item => item.node.id);\n                }\n                if (data.animals.pageInfo) {\n                    info = data.animals.pageInfo;\n                }\n                dispatch(animalsSuccessFav({ ids, info }));\n                dispatch(lastQueryVarsFav(queryArgs));\n            }\n        } catch (error: any) {\n            dispatch(hasErrorFav(error.message));\n        }\n    };\n\nexport const addToFavorites =\n    (id: number) =>\n    async (dispatch, getState, { apolloClient }) => {\n        dispatch(startLoadingFav());\n\n        try {\n            const result = await apolloClient.mutate({\n                mutation: ADD_TO_FAVORITE_ANIMALS_MUTATION,\n                variables: { animalId: id },\n            });\n            if (result) {\n                dispatch(forceReFetchAnimalsForSameContext('/favorites'));\n                dispatch(animalAddFav(id));\n            }\n        } catch (error: any) {\n            dispatch(hasErrorFav(error.message));\n        }\n    };\n\nexport const removeFromFavorites =\n    (id: number) =>\n    async (dispatch, getState, { apolloClient }) => {\n        dispatch(startLoadingFav());\n\n        try {\n            const result = await apolloClient.mutate({\n                mutation: REMOVE_FROM_FAVORITE_ANIMALS_MUTATION,\n                variables: { animalId: id },\n            });\n            if (result) {\n                dispatch(animalRemoveFav(id));\n                dispatch(forceReFetchAnimalsForSameContext('/favorites'));\n            }\n        } catch (error: any) {\n            dispatch(hasErrorFav(error.message));\n        }\n    };\n\nexport const toggleFavoriteAnimal = (id: number) => async (dispatch, getState) => {\n    const { animalsFav } = getState();\n    const isFavorite = animalsFav.page.ids.indexOf(id) !== -1;\n    if (isFavorite) {\n        dispatch(removeFromFavorites(id));\n    } else {\n        dispatch(addToFavorites(id));\n    }\n};\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { useAuth0 } from '@auth0/auth0-react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Slide from '@material-ui/core/Slide';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { navigation, NavigationItem } from '../../navigation';\n\nexport const BOTTOM_NAVIGATION_HEIGHT = 64;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            top: 'auto',\n            bottom: 0,\n            height: BOTTOM_NAVIGATION_HEIGHT,\n            backgroundColor: theme.palette.primary.light,\n        },\n        drawerHeader: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: theme.spacing(0, 3),\n            // necessary for height alignment with app bar\n            ...theme.mixins.toolbar,\n            justifyContent: 'space-between',\n        },\n        show: {\n            transform: 'translateY(0)',\n            transition: 'transform .5s',\n        },\n        hide: {\n            transform: 'translateY(-110%)',\n            transition: 'transform .5s',\n        },\n    })\n);\n\ninterface Props {\n    children: React.ReactElement;\n}\n\nfunction HideOnScroll(props: Props) {\n    const { children } = props;\n    const trigger = useScrollTrigger();\n\n    return (\n        <Slide appear={false} direction=\"up\" in={!trigger}>\n            {children}\n        </Slide>\n    );\n}\n\nexport default function AppBottomNavigation() {\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n    const [open, setDrawerOpen] = React.useState(false);\n    const { isAuthenticated } = useAuth0();\n\n    const handleDrawerOpen = () => {\n        setDrawerOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setDrawerOpen(false);\n    };\n\n    const handleNavListItemClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>, pathTo: string) => {\n        history.push(pathTo);\n        setDrawerOpen(false);\n    };\n\n    const linkToCurrentPage = (pathTo: string) => {\n        return location.pathname === pathTo;\n    };\n\n    const navList = () => (\n        <div role=\"presentation\">\n            <div className={classes.drawerHeader}>\n                <Typography variant=\"h6\">PetBook</Typography>\n                <IconButton edge=\"end\" onClick={handleDrawerClose}>\n                    <CloseIcon />\n                </IconButton>\n            </div>\n            <Divider />\n            <List>\n                {navigation\n                    .filter((item: NavigationItem) => {\n                        return item.authRequired ? isAuthenticated : true;\n                    })\n                    .map((item: NavigationItem) => (\n                        <ListItem\n                            button\n                            key={item.title}\n                            selected={linkToCurrentPage(item.to)}\n                            onClick={event => handleNavListItemClick(event, item.to)}\n                        >\n                            <ListItemIcon>\n                                <ChevronRightIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={item.title} />\n                        </ListItem>\n                    ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <HideOnScroll>\n            <AppBar className={classes.appBar} position=\"fixed\" color=\"default\">\n                <Toolbar>\n                    <IconButton edge=\"start\" onClick={handleDrawerOpen} color=\"inherit\" aria-label=\"open drawer\">\n                        <MenuIcon />\n                    </IconButton>\n                </Toolbar>\n                <Drawer anchor=\"bottom\" open={open} onClose={handleDrawerClose}>\n                    {navList()}\n                </Drawer>\n            </AppBar>\n        </HideOnScroll>\n    );\n}\n","import React from 'react';\n\nimport useMobile from '../../hooks/useMobile';\nimport AppBottomNavigation from './AppBottomNavigation';\n\nexport default function ResponsiveAppBottom() {\n    const matchesMobile = useMobile();\n    return matchesMobile ? <AppBottomNavigation /> : <div />;\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircleTwoToneIcon from '@material-ui/icons/AccountCircleTwoTone';\nimport useMobileXS from '../../hooks/useMobileXS';\n\nexport default function TopAuthNav() {\n    const classes = useStyles();\n    const { isAuthenticated, user, loginWithRedirect, logout } = useAuth0();\n    const history = useHistory();\n\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n    const matchesMobileXS = useMobileXS();\n\n    const getShortUserName = (username?: string): string => {\n        if (!username) {\n            return '';\n        }\n\n        const words = username.split(' ');\n        let initials = '';\n        words.forEach(word => {\n            initials += word[0];\n        });\n        return initials;\n    };\n\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleLinkProfile = () => {\n        history.push('/user-profile');\n        handleClose();\n    };\n\n    return (\n        <div>\n            {isAuthenticated ? (\n                <>\n                    <Button\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        aria-haspopup=\"true\"\n                        onClick={handleMenu}\n                        color=\"inherit\"\n                        startIcon={<AccountCircleTwoToneIcon />}\n                    >\n                        <Typography component=\"span\" className={classes.label} noWrap>\n                            {matchesMobileXS ? getShortUserName(user?.name) : user?.name}\n                        </Typography>\n                    </Button>\n                    <Menu\n                        id=\"menu-appbar\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        keepMounted\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={handleClose}\n                    >\n                        <MenuItem onClick={handleLinkProfile}>Profile</MenuItem>\n                        <MenuItem\n                            onClick={() =>\n                                logout({\n                                    returnTo: window.location.origin,\n                                })\n                            }\n                        >\n                            Logout\n                        </MenuItem>\n                    </Menu>\n                </>\n            ) : (\n                <IconButton aria-label=\"login\" edge=\"end\" onClick={() => loginWithRedirect()} color=\"inherit\">\n                    <AccountCircleTwoToneIcon />\n                </IconButton>\n            )}\n        </div>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    label: {\n        fontSize: 'inherit',\n        fontWeight: 'inherit',\n        [theme.breakpoints.down('sm')]: {\n            maxWidth: 150,\n        },\n    },\n}));\n","import { useMediaQuery } from '@material-ui/core';\nimport useTheme from '@material-ui/core/styles/useTheme';\n\nexport default function useMobileXS() {\n    const theme = useTheme();\n    return useMediaQuery(theme.breakpoints.down('xs'));\n}\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { navigation, NavigationItem } from '../../navigation';\nimport TopAuthNav from './TopAuthNav';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        appbar: {\n            backgroundColor: 'transparent',\n        },\n        toolbar: {\n            justifyContent: 'space-between',\n        },\n        title: {\n            flexGrow: 1,\n        },\n    })\n);\n\nexport default function AppTopBar() {\n    const classes = useStyles();\n    const location = useLocation();\n\n    const pageTitle = () => {\n        const pages: Array<NavigationItem> = navigation.filter((item: NavigationItem) => item.to === location.pathname);\n        if (pages.length === 1) {\n            return pages[0].pageTitle;\n        }\n        return '';\n    };\n\n    return (\n        <AppBar className={classes.appbar} position=\"static\" color=\"default\" elevation={0}>\n            <Toolbar className={classes.toolbar}>\n                <Typography variant=\"h6\" className={classes.title} noWrap>\n                    {pageTitle()}\n                </Typography>\n                <TopAuthNav />\n            </Toolbar>\n        </AppBar>\n    );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { Fade } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Link from '@material-ui/core/Link';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { navigation, NavigationItem } from '../../navigation';\nimport TopAuthNav from './TopAuthNav';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            backgroundColor: theme.palette.primary.light,\n        },\n        title: {\n            flexGrow: 1,\n            textAlign: 'left',\n        },\n        link: {\n            margin: theme.spacing(1, 1.5),\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            color: theme.palette.text.secondary,\n            '&.active': {\n                color: theme.palette.text.primary,\n            },\n        },\n    })\n);\n\nexport default function AppTopNavigation() {\n    const classes = useStyles();\n    const { isAuthenticated } = useAuth0();\n\n    return (\n        <AppBar className={classes.appBar} position=\"fixed\" color=\"default\">\n            <Fade in timeout={600}>\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        PetBook\n                    </Typography>\n                    {navigation\n                        .filter((item: NavigationItem) => {\n                            return item.authRequired ? isAuthenticated : true;\n                        })\n                        .map((item: NavigationItem) => (\n                            <Link component={NavLink} className={classes.link} key={item.title} to={item.to} exact>\n                                {item.title}\n                            </Link>\n                        ))}\n                    <TopAuthNav />\n                </Toolbar>\n            </Fade>\n        </AppBar>\n    );\n}\n","import React from 'react';\n\nimport useMobile from '../../hooks/useMobile';\nimport AppTopBar from './AppTopBar';\nimport AppTopNavigation from './AppTopNavigation';\n\nexport default function ResponsiveAppTop() {\n    const matchesMobile = useMobile();\n    return matchesMobile ? <AppTopBar /> : <AppTopNavigation />;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Fade, Typography } from '@material-ui/core';\nimport Page from './Page';\n\nfunction PageNotFound() {\n    return (\n        <Fade in timeout={600}>\n            <Page>\n                <Typography variant=\"h3\" component=\"h1\">\n                    Page Not Found\n                </Typography>\n                <Typography variant=\"body1\">\n                    Try navigating to <Link to=\"/\">homepage</Link>\n                </Typography>\n            </Page>\n        </Fade>\n    );\n}\n\nexport default PageNotFound;\n","import { createTheme } from '@material-ui/core/styles';\nimport { ThemeOptions } from '@material-ui/core/styles/createTheme';\n\nconst defaultTheme = createTheme({\n    palette: {\n        primary: {\n            light: '#e8cdb8',\n            main: '#875e3b',\n            dark: '#4e2c1a',\n        },\n        secondary: {\n            light: '#417565',\n            main: '#13493b',\n            dark: '#002115',\n        },\n        tertiary: {\n            light: '#ffffff',\n            main: '#faf5f1',\n            dark: '#c7c2be',\n        },\n        error: {\n            main: '#f44336',\n        },\n    },\n    breakpoints: {\n        // due to Material UI breakpoints implementation\n        // theme.breakpoints.down('sm') resolves to \"+1 and lower\" or \"md and lower\"\n        values: {\n            xs: 0,\n            sm: 500,\n            md: 768,\n            lg: 1280,\n            xl: 1920,\n        },\n    },\n});\nconst { breakpoints } = defaultTheme;\n\nconst theme: ThemeOptions = {\n    ...defaultTheme,\n    overrides: {\n        MuiTypography: {\n            h1: {\n                fontSize: '3rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '2.6rem',\n                },\n            },\n            h2: {\n                fontSize: '2.6rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '2.2rem',\n                },\n            },\n            h3: {\n                fontSize: '2.2rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.8rem',\n                },\n            },\n            h4: {\n                fontSize: '1.8rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.6rem',\n                },\n            },\n            h5: {\n                fontSize: '1.8rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.4rem',\n                },\n            },\n            h6: {\n                fontSize: '1.6rem',\n                lineHeight: 1.2,\n                [breakpoints.down('sm')]: {\n                    fontSize: '1.4rem',\n                },\n            },\n        },\n        MuiListItemIcon: {\n            root: {\n                minWidth: 'auto',\n                marginTop: 4,\n                marginBottom: 4,\n            },\n        },\n        MuiStepIcon: {\n            root: {\n                '&$completed': {\n                    fill: defaultTheme.palette.success.main,\n                },\n                '&$active': {\n                    fill: defaultTheme.palette.secondary.main,\n                },\n            },\n        },\n    },\n    props: {\n        MuiUseMediaQuery: {\n            noSsr: true,\n        },\n    },\n};\n\ndeclare module '@material-ui/core/styles/createPalette' {\n    interface Palette {\n        tertiary: Palette['primary'];\n    }\n    interface PaletteOptions {\n        tertiary: PaletteOptions['primary'];\n    }\n}\n\nexport default theme;\n","import React from 'react';\nimport { Route, RouteProps } from 'react-router-dom';\n\nimport { withAuthenticationRequired } from '@auth0/auth0-react';\n\nexport default function PrivateRoute({ component, ...otherProps }: RouteProps) {\n    if (!component) {\n        return null;\n    }\n\n    return <Route component={withAuthenticationRequired(component as React.ComponentType<any>)} {...otherProps} />;\n}\n","import './App.css';\nimport React from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { Skeleton } from '@material-ui/lab';\nimport ResponsiveAppBottom from './components/layout/ResponsiveAppBottom';\nimport ResponsiveAppTop from './components/layout/ResponsiveAppTop';\nimport PageNotFound from './pages/PageNotFound';\nimport MuiTheme from './theme';\nimport PrivateRoute from './utils/auth/PrivateRoute';\n\nconst LocationDisplay = () => {\n    const location = useLocation();\n    return <div data-testid=\"location-display\">{location.pathname}</div>;\n};\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n});\n\nexport default function App() {\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={MuiTheme}>\n            <CssBaseline />\n            <div className={classes.root}>\n                <ResponsiveAppTop />\n                <React.Suspense fallback={<Skeleton variant=\"rect\" height=\"100vh\" width=\"100%\" />}>\n                    <Switch>\n                        <Route exact path=\"/about\" component={React.lazy(() => import('./pages/About'))} />\n                        <PrivateRoute\n                            exact\n                            path=\"/user-profile\"\n                            component={React.lazy(() => import('./pages/UserProfile'))}\n                        />\n                        <PrivateRoute\n                            exact\n                            path=\"/animal-list\"\n                            component={React.lazy(() => import('./pages/AnimalsPage'))}\n                        />\n                        <PrivateRoute\n                            exact\n                            path=\"/animal/new\"\n                            component={React.lazy(() => import('./pages/AnimalEditPage'))}\n                        />\n                        <PrivateRoute\n                            exact\n                            path=\"/animal/:id\"\n                            component={React.lazy(() => import('./pages/AnimalDetailsPage'))}\n                        />\n                        <PrivateRoute\n                            exact\n                            path=\"/animal/:id/edit\"\n                            component={React.lazy(() => import('./pages/AnimalEditPage'))}\n                        />\n                        <PrivateRoute\n                            exact\n                            path=\"/favorites/\"\n                            component={React.lazy(() => import('./pages/FavoritesPage'))}\n                        />\n                        <Route\n                            exact\n                            path=\"/search\"\n                            component={React.lazy(() => import('./pages/PageNotImplemented'))}\n                        />\n                        <Route exact path=\"/login\" component={React.lazy(() => import('./pages/PageNotImplemented'))} />\n                        <Route\n                            exact\n                            path=\"/logout\"\n                            component={React.lazy(() => import('./pages/PageNotImplemented'))}\n                        />\n                        <Route exact path=\"/\" component={React.lazy(() => import('./pages/Home'))} />\n                        <Route component={PageNotFound} />\n                    </Switch>\n                </React.Suspense>\n                <ResponsiveAppBottom />\n            </div>\n            <LocationDisplay />\n        </ThemeProvider>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","interface Config {\n    GRAPHQL_URL: string;\n    AUTH0_DOMAIN: string;\n    AUTH0_CLIENT_ID: string;\n    AUTH0_AUDIENCE_URL: string;\n    PUBLIC_URL: string;\n}\n\nconst config: Config = {\n    GRAPHQL_URL: process.env.REACT_APP_GRAPHQL_URL!,\n    AUTH0_DOMAIN: process.env.REACT_APP_AUTH0_DOMAIN!,\n    AUTH0_CLIENT_ID: process.env.REACT_APP_AUTH0_CLIENT_ID!,\n    AUTH0_AUDIENCE_URL: process.env.REACT_APP_AUTH0_AUTH_AUDIENCE!,\n    PUBLIC_URL: process.env.PUBLIC_URL!,\n};\n\nexport default config;\n","import { createUploadLink } from 'apollo-upload-client';\n\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { Auth0Client } from '@auth0/auth0-spa-js';\nimport config from '../config';\n\nconst auth0 = new Auth0Client({\n    domain: config.AUTH0_DOMAIN,\n    client_id: config.AUTH0_CLIENT_ID,\n    redirect_uri: window.location.origin,\n    audience: config.AUTH0_AUDIENCE_URL,\n});\n\nconst httpLink = createUploadLink({\n    uri: config.GRAPHQL_URL,\n});\n\nconst authLink = setContext(async () => {\n    try {\n        const token = await auth0.getTokenSilently();\n        return {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        };\n    } catch (error: any) {\n        // eslint-disable-next-line no-console\n        console.error('auth0.getTokenSilently error', error);\n    }\n    return {};\n});\n\nconst apolloClient = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache({\n        typePolicies: {\n            Query: {\n                fields: {\n                    animals: {\n                        keyArgs: [],\n                        merge(existing, incoming) {\n                            return incoming;\n                        },\n                    },\n                },\n            },\n        },\n    }),\n    connectToDevTools: true,\n});\n\nexport default apolloClient;\n","import { combineReducers } from 'redux';\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport authorizedApolloClient from '../utils/authorizedApolloClient';\nimport animalsAll from './animalsAll';\nimport animalsFav from './animalsFav';\n\nconst reducer = combineReducers({\n    animalsAll,\n    animalsFav,\n});\n\nconst store = configureStore({\n    reducer,\n    middleware: getDefaultMiddleware =>\n        getDefaultMiddleware({\n            thunk: {\n                extraArgument: { apolloClient: authorizedApolloClient },\n            },\n            serializableCheck: false,\n        }),\n});\n\nexport default store;\n","import React, { ReactChild } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport config from '../../config';\n\nconst Auth0ProviderWithHistory = ({ children }: { children: ReactChild }) => {\n    const history = useHistory();\n\n    const onRedirectCallback = (appState: any) => {\n        history.push(appState?.returnTo || window.location.pathname);\n    };\n\n    return (\n        <Auth0Provider\n            domain={config.AUTH0_DOMAIN}\n            clientId={config.AUTH0_CLIENT_ID}\n            redirectUri={window.location.origin}\n            audience={config.AUTH0_AUDIENCE_URL}\n            onRedirectCallback={onRedirectCallback}\n        >\n            {children}\n        </Auth0Provider>\n    );\n};\n\nexport default Auth0ProviderWithHistory;\n","import React, { ReactChild } from 'react';\n\nimport { ApolloProvider } from '@apollo/client';\nimport authorizedApolloClient from './authorizedApolloClient';\n\nconst AuthorizedApolloProvider = ({ children }: { children: ReactChild }) => {\n    return <ApolloProvider client={authorizedApolloClient}>{children}</ApolloProvider>;\n};\n\nexport default AuthorizedApolloProvider;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport store from './store';\nimport Auth0ProviderWithHistory from './utils/auth/Auth0ProviderWithHistory';\nimport AuthorizedApolloProvider from './utils/AuthorizedApolloProvider';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Auth0ProviderWithHistory>\n                <AuthorizedApolloProvider>\n                    <Provider store={store}>\n                        <App />\n                    </Provider>\n                </AuthorizedApolloProvider>\n            </Auth0ProviderWithHistory>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { useMediaQuery } from '@material-ui/core';\nimport useTheme from '@material-ui/core/styles/useTheme';\n\nexport default function useMobile() {\n    const theme = useTheme();\n    return useMediaQuery(theme.breakpoints.down('sm'));\n}\n","interface NavigationItem {\n    authRequired: boolean;\n    title: string;\n    to: string;\n    pageTitle: string;\n}\n\nconst navigation: Array<NavigationItem> = [\n    { authRequired: false, title: 'Home', to: '/', pageTitle: 'Welcome' },\n    { authRequired: false, title: 'About', to: '/about', pageTitle: 'About this project' },\n    { authRequired: true, title: 'Animals', to: '/animal-list', pageTitle: 'Animal list' },\n    { authRequired: true, title: 'Favorites', to: '/favorites', pageTitle: 'Favorites' },\n    { authRequired: true, title: 'Reports', to: '/reports', pageTitle: 'Reports' },\n];\n\nexport { navigation };\nexport type { NavigationItem };\n","/* eslint no-console: [\"error\", { allow: [\"log\", \"warn\", \"error\"] }] */\n\nimport { loader } from 'graphql.macro';\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { AnimalFormData } from '../components/animal/create-update/AnimalForm';\nimport { CreateAnimalInput, PageInfo, QueryAnimalsArgs, UpdateAnimalInput } from '../graphql/types';\nimport { PagedAnimalsState } from './types-definitions';\n\nconst GET_ANIMALS_QUERY = loader('../graphql/queries/animal-list.graphql');\n\nconst CREATE_ANIMAL_MUTATION = loader('../graphql/mutations/create-animal.graphql');\nconst UPDATE_ANIMAL_MUTATION = loader('../graphql/mutations/update-animal.graphql');\n\n// Slice\n\nconst initialState: PagedAnimalsState = {\n    page: {\n        ids: [],\n        objs: [],\n        info: <PageInfo>{\n            hasNextPage: false,\n            hasPreviousPage: false,\n            totalCount: 0,\n            startCursor: '',\n            endCursor: '',\n        },\n    },\n    isLoading: false,\n    error: false,\n    queryVars: {},\n    pageContext: '',\n};\n\nconst slice = createSlice({\n    name: 'animalsAll',\n    initialState,\n    reducers: {\n        startLoadingAll: state => {\n            state.isLoading = true;\n        },\n        stopLoadingAll: state => {\n            state.isLoading = false;\n        },\n        hasErrorAll: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n        animalsSuccessAll: (state, action) => {\n            state.page.ids = action.payload.ids;\n            state.page.objs = action.payload.objs;\n            state.page.info = action.payload.info;\n            state.isLoading = false;\n        },\n        lastQueryVarsAll: (state, action) => {\n            state.queryVars = action.payload;\n        },\n        animalsContextAll: (state, action) => {\n            state.pageContext = action.payload;\n        },\n    },\n});\n\nexport default slice.reducer;\n\n// Actions\n\nconst { animalsSuccessAll, startLoadingAll, hasErrorAll, lastQueryVarsAll, animalsContextAll } = slice.actions;\n\nexport const fetchAnimalsIfNewContext = (queryArgs: QueryAnimalsArgs, context: string) => (dispatch, getState) => {\n    const { animalsAll } = getState();\n    const { pageContext } = animalsAll;\n    if (context !== pageContext) {\n        dispatch(startLoadingAll());\n        dispatch(fetchAnimals(queryArgs));\n    }\n    dispatch(animalsContextAll(context));\n};\n\nexport const forceReFetchAnimalsForSameContext = (context: string) => (dispatch, getState) => {\n    const { animalsAll } = getState();\n    const { queryVars, pageContext } = animalsAll;\n    if (context === pageContext) {\n        dispatch(fetchAnimals(queryVars));\n    }\n};\n\nexport const fetchAnimals =\n    (queryArgs: QueryAnimalsArgs) =>\n    async (dispatch, getState, { apolloClient }) => {\n        try {\n            const { data } = await apolloClient.query({\n                query: GET_ANIMALS_QUERY,\n                fetchPolicy: 'no-cache',\n                variables: queryArgs,\n            });\n            if (data.animals) {\n                let ids;\n                let objs;\n                let info;\n                if (data.animals.edges) {\n                    ids = data.animals.edges.map(item => item.node.id);\n                    objs = data.animals.edges.map(item => item.node);\n                }\n                if (data.animals.pageInfo) {\n                    info = data.animals.pageInfo;\n                }\n                dispatch(animalsSuccessAll({ ids, objs, info }));\n                dispatch(lastQueryVarsAll(queryArgs));\n            }\n        } catch (error: any) {\n            dispatch(hasErrorAll(error.message));\n        }\n    };\n\nexport const createOrUpdateAnimal =\n    (formData: AnimalFormData) =>\n    async (dispatch, getState, { apolloClient }) => {\n        dispatch(startLoadingAll());\n\n        const mutation = formData.id ? UPDATE_ANIMAL_MUTATION : CREATE_ANIMAL_MUTATION;\n        const animalInput = makeAnimalInputFromAnimalForm(formData);\n\n        try {\n            const result = await apolloClient.mutate({\n                mutation,\n                variables: { input: animalInput },\n            });\n            if (result) {\n                const { animalsAll } = getState();\n                const { queryVars } = animalsAll;\n                dispatch(fetchAnimals(queryVars));\n            }\n        } catch (error: any) {\n            dispatch(hasErrorAll(error.message));\n        }\n    };\n\nconst makeAnimalInputFromAnimalForm = (formData: AnimalFormData): CreateAnimalInput | UpdateAnimalInput => {\n    const result: CreateAnimalInput = {\n        name: formData.name,\n        comments: formData.comments,\n        registration: {\n            registrationNo: 'no registration',\n        },\n        details: {\n            // todo - should let to send speciesId without breedId being set.\n            // problem due to backend architecture solutions\n\n            //speciesId: formData.details?.species?.id,\n            breedId: formData.details?.breed?.id,\n            genderId: formData.details?.gender?.id,\n            colorId: formData.details?.color?.id,\n            birthDate: formData.details?.birthDate,\n        },\n    };\n    if (formData.id) {\n        return { ...result, id: formData.id } as UpdateAnimalInput;\n    }\n    return result;\n};\n"],"sourceRoot":""}