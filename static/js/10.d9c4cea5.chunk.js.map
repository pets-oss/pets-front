{"version":3,"sources":["utils/string.ts","utils/dateFormatters.ts","utils/animal.ts","components/animal/ViewSelector.tsx","hooks/usePrevious.tsx","components/form/Selector.tsx","components/form/DynamicSelector.tsx","components/animal/filters/AnimalFilterChips.tsx","graphql/data-transform/species.ts","components/icons/IconBird.tsx","components/icons/IconCat.tsx","components/icons/IconDog.tsx","components/icons/IconGuineapig.tsx","components/icons/IconRabbit.tsx","components/icons/IconReptile.tsx","components/icons/AnimalAvatar.tsx","components/animal/AnimalCard.tsx","components/animal/AnimalsTable.tsx","components/animal/PaginationRounded.tsx","components/animal/AnimalsListContainer.tsx","components/animal/filters/AnimalFiltersDialogContents.tsx","components/animal/filters/AnimalFiltersDialog.tsx","pages/FavoritesPage.tsx"],"names":["capitalizeFirstLetter","value","charAt","toUpperCase","slice","getYMDDateFromTS","timestamp","date","Date","parseInt","format","locale","ltLocale","getDateYMDFlexible","datestr","result","parse","isValid","getAnimalAge","birthTimestamp","distance","formatDistance","Number","getAnimalWeight","weight","getAnimalDetails","animal","animalDetails","details","birthDay","title","birthDate","otherDetails","Object","keys","filter","key","map","__typename","AnimalsViewType","ViewSelector","onChange","size","exclusive","e","val","LIST","TABLE","usePrevious","ref","useRef","useEffect","current","Selector","options","name","defaultValue","disabled","optionsLimit","label","required","multiple","useFormContext","control","errors","formState","limitOptions","opts","state","createFilterOptions","rules","render","props","Autocomplete","field","filterOptions","getOptionLabel","option","_","renderInput","params","TextField","variant","color","margin","error","helperText","message","DynamicSelector","gqlOptions","data","useQuery","query","variables","skip","type","FILTER_PROPS","AnimalFiltersChips","dispatch","useAppDispatch","filters","useAppSelector","hasFilters","includes","length","filterChip","item","onDelete","deleteFilter","id","container","spacing","onClick","resetFilters","SpeciesType","SpeciesMapList","DOG","CAT","RABBIT","BIRD","GUINEAPIG","REPTILE","IconBird","SvgIcon","d","IconCat","IconDog","IconGuineapig","IconRabbit","IconReptile","classes","dynamicAvatar","AnimalAvatar","species","Avatar","className","AnimalSpeciesIcon","UNDEFINED","getSpecieType","Pets","PREFIX","cardMediaWrapper","media","favoriteButton","isFavorite","headerText","subHeaderText","StyledCard","styled","Card","theme","position","zIndex","top","right","backgroundColor","maxWidth","fontSize","lineHeight","fontWeight","palette","grey","AnimalCard","formatedRegistrationDate","xs","md","lg","useState","setFavorite","registration","registrationDate","gender","Grid","Box","CardActionArea","component","NavLink","to","CardMedia","image","imageUrl","IconButton","clsx","toggleFavorite","favorite","CardHeader","avatar","Typography","noWrap","subheader","React","memo","headRow","head","row","StyledTable","Table","width","alpha","background","paper","primary","dark","text","secondary","cursor","textDecoration","AnimalsTable","animals","navigate","useNavigate","TableContainer","TableHead","TableRow","TableCell","align","TableBody","hover","animalId","alt","src","toolbar","actions","Root","marginTop","flexWrap","breakpoints","down","PaginationRounded","count","page","onPageChange","pageSize","onPageSizeChange","justifyContent","TablePagination","event","newPage","rowsPerPage","rowsPerPageOptions","onRowsPerPageChange","target","labelRowsPerPage","AnimalsListContainer","viewType","loading","entities","pageInfo","queryArgs","currentPage","totalPageSize","totalCount","Skeleton","animation","height","loadNextPage","loadPreviousPage","setPageSize","GET_SPECIES","GET_GENDERS","GET_BREEDS","AnimalFiltersDialogContents","setValue","useWatch","prevSpecies","speciesHasChangedInUi","undefined","marginBottom","language","toString","AnimalFiltersDialog","useTheme","fullScreen","useMediaQuery","dialogOpen","setDialogOpen","methods","useForm","defaultValues","handleSubmit","reset","formRef","handleDialogClose","alignItems","Dialog","fullWidth","open","onClose","display","marginRight","DialogTitle","Button","DialogContent","DialogActions","formData","setFilters","autoFocus","TopSection","mobile","style","textAlign","FavoritesPage","setViewType","match","useMatch","location","useLocation","favoriteChangeRequestId","resetQuery","pathname","fetchAnimals","isFavoriteOnly","topSection"],"mappings":"iHAAA,kCAAO,IAAMA,EAAwB,SAACC,GAAD,OAA2BA,EAAMC,OAAO,GAAGC,cAAgBF,EAAMG,MAAM,K,iCCA5G,qHAGaC,EAAmB,WAA4C,IAA3CC,EAA0C,uDAAf,GACxD,GAAIA,EAAW,CACX,IAAMC,EAAa,IAAIC,KAAKC,SAASH,EAAW,KAChD,OAAOI,YAAOH,EAAM,aAAc,CAAEI,OAAQC,MAGhD,MAAO,IA0BEC,EAAqB,WAAoD,IAAnDC,EAAkD,uDAAzB,GACxD,GAAIA,EAAS,CACT,IAAIC,EAASC,YAAMF,EAAS,aAAc,IAAIN,MAC9C,GAAIS,YAAQF,GACR,OAAOL,YAAOK,EAAQ,cAG1B,GADAA,EAASC,YAAMF,EAAS,UAAW,IAAIN,MACnCS,YAAQF,GACR,OAAOL,YAAOK,EAAQ,cAG1B,GADAA,EAASC,YAAMF,EAAS,OAAQ,IAAIN,MAChCS,YAAQF,GACR,OAAOL,YAAOK,EAAQ,cAG9B,OAAO,I,4IC5CEG,EAAe,WAAiD,IAAhDC,EAA+C,uDAAf,GACzD,GAAIA,EAAgB,CAChB,IAAMC,EAAWC,YAAeC,OAAOH,GAAiB,IAAIX,KAAQ,CAAEG,OAAQC,MAC9E,OAAOZ,YAAsBoB,GAGjC,MAAO,IAGEG,EAAkB,SAACC,GAAD,OAA6BA,EAAM,UAAMA,EAAN,MAAmB,IAaxEC,EAAmB,SAACC,GAC7B,IAAiBC,EAAkBD,EAA3BE,QAEFC,EAAW,CACbC,MAAO,WACP7B,OAAoB,OAAb0B,QAAa,IAAbA,OAAA,EAAAA,EAAeI,WAAYb,EAAaS,EAAcI,WAAa,IAGxEP,EAAS,CACXM,MAAO,SACP7B,OAAoB,OAAb0B,QAAa,IAAbA,OAAA,EAAAA,EAAeH,QAASD,EAAgBI,EAAcH,QAAU,IAGrEQ,EAAeL,EACfM,OAAOC,KAAKP,GACPQ,QAAO,SAAAC,GACJ,MAAqC,kBAAvBT,EAAcS,IAA4C,OAAvBT,EAAcS,MAElEC,KAAI,SAAAD,GACD,MAAO,CAAEN,MAAOH,EAAcS,GAAKE,WAAYrC,MAAO0B,EAAcS,GAAKnC,UAEjF,GAEN,MAAM,CAAE4B,GAAR,mBAAqBG,GAArB,CAAmCR,M,iCCnDvC,6EA8BYe,EA9BZ,6DAWe,SAASC,EAAT,GAA+D,IAAvCvC,EAAsC,EAAtCA,MAAOwC,EAA+B,EAA/BA,SAC1C,OACI,eAAC,IAAD,CACIC,KAAK,QACLC,WAAS,EACT1C,MAAOA,EACPwC,SAAU,SAACG,EAAGC,GAAJ,OAAYJ,EAASI,IAC/B,aAAW,gBALf,UAOI,cAAC,IAAD,CAAc5C,MAAOsC,EAAgBO,KAAM,aAAYP,EAAgBO,KAAvE,SACI,cAAC,IAAD,MAEJ,cAAC,IAAD,CAAc7C,MAAOsC,EAAgBQ,MAAO,aAAYR,EAAgBQ,MAAxE,SACI,cAAC,IAAD,U,SAMJR,K,YAAAA,E,eAAAA,M,uCC9BZ,6CAEe,SAASS,EAAe/C,GACnC,IAAMgD,EAAMC,mBAIZ,OAHAC,qBAAU,WACNF,EAAIG,QAAUnD,KAEXgD,EAAIG,U,iJCCA,SAASC,EAAT,GASI,IARfC,EAQc,EARdA,QACAC,EAOc,EAPdA,KACAC,EAMc,EANdA,aACAC,EAKc,EALdA,SAKc,IAJdC,oBAIc,MAXI,IAWJ,EAHdC,EAGc,EAHdA,MAGc,IAFdC,gBAEc,aADdC,gBACc,SACd,EAGIC,cAFAC,EADJ,EACIA,QACaC,EAFjB,EAEIC,UAAaD,OAGXE,EAAe,SAACC,EAAMC,GAAP,OACjBC,cAAsDF,EAAMC,GAAOhE,MAAM,EAAGsD,IAEhF,OACI,cAAC,IAAD,CACIF,aAAY,OAAEA,QAAF,IAAEA,IAAgB,KAC9Bc,MAAO,CAAEV,WAAUA,GAAW,YAC9BW,OAAQ,SAAAC,GAAK,aACT,cAACC,EAAA,EAAD,2BACQD,GADR,IAEIvE,MAAK,UAAEuE,EAAME,MAAMzE,aAAd,QAAuB,KAC5BqD,QAAO,OAAEA,QAAF,IAAEA,IAAW,GACpBqB,cAAeT,EACfU,eAAgB,SAAAC,GAAM,MAAuB,kBAAXA,EAAsBA,EAASA,EAAO5E,OAMxEwC,SAAU,SAACqC,EAAGD,GACVL,EAAME,MAAMjC,SAASoC,IAEzBpB,SAAUA,EACVI,SAAUA,EACVkB,YAAa,SAAAC,GAAM,eACf,cAACC,EAAA,EAAD,2BACQD,GADR,IAEIE,QAAQ,WACRC,MAAM,YACNC,OAAO,QACPC,QAASrB,EAAOT,GAChBI,MAAK,OAAEA,QAAF,IAAEA,IAAS3D,YAAsBuD,GACtC+B,YAAY,oBAAAtB,EAAOT,UAAP,eAAcgC,eAAd,QAAyB3B,GAAW,WAAa,mBAK7EL,KAAMA,EACNQ,QAASA,ICvDN,SAASyB,EAAT,GASW,IARtBC,EAQqB,EARrBA,WACAlC,EAOqB,EAPrBA,KACAC,EAMqB,EANrBA,aACAK,EAKqB,EALrBA,SACAJ,EAIqB,EAJrBA,SACA6B,EAGqB,EAHrBA,WACA1B,EAEqB,EAFrBA,SACAD,EACqB,EADrBA,MAEQ+B,EAASC,YAAsBF,EAAWG,MAAO,CACrDC,UAAWJ,EAAWI,UACtBC,KAAMrC,IAFFiC,KAKR,OACI,cAACrC,EAAD,CACIC,QAASoC,EAAOA,EAAKD,EAAWM,MAAQ,GACxCxC,KAAMA,EACN+B,WAAYA,EACZ9B,aAAcA,EACdK,SAAUA,EACVJ,SAAUA,EACVG,SAAUA,EACVD,MAAOA,M,iCC9BnB,+FAMMqC,EAAe,CAAC,UAAW,SAAU,SAE5B,SAASC,IACpB,IAAMC,EAAWC,cACXC,EAAUC,aAAe,SAAAjC,GAAK,OAAIA,EAAMgC,WAExCE,EAAarE,OAAOC,KAAKkE,GAASjE,QAAO,SAAAC,GAAG,OAAI4D,EAAaO,SAASnE,MAAMoE,OAAS,EAUrFC,EAAa,SAACV,EAAM5D,GAAP,OACf,cAAC,IAAD,CAAMuE,MAAI,EAAV,SACI,cAAC,IAAD,CAAM/C,MAAOxB,EAAOlC,MAAO0G,SAAU,kBAN5B,SAAAZ,GACbG,EAASU,YAAab,IAKyBY,CAASZ,OADxD,UAAmBA,EAAnB,YAA2B5D,EAAO0E,MAKtC,OAAIP,EAEI,eAAC,IAAD,CAAMQ,WAAS,EAACC,QAAS,EAAzB,UACK9E,OAAOC,KAAKkE,GAAS/D,KAAI,SAAA0D,GACtB,GAAIK,EAAQL,GACR,OAAOU,EAAWV,EAAMK,EAAQL,OAGxC,cAAC,IAAD,CAAQiB,QAtBO,WACvBd,EAASe,gBAqBD,sBAID,O,wEC9BHC,E,uNAAAA,O,aAAAA,I,aAAAA,I,mBAAAA,I,eAAAA,I,yBAAAA,I,qBAAAA,E,uBAAAA,M,KAUZ,IAAMC,EAEF,CACA,EAAKD,EAAYE,IACjB,EAAKF,EAAYG,IACjB,EAAKH,EAAYI,OACjB,GAAMJ,EAAYK,KAClB,GAAML,EAAYM,UAClB,GAAMN,EAAYO,S,4BCxBP,SAASC,EAASlD,GAC7B,OACI,eAACmD,EAAA,EAAD,2BAAanD,GAAb,cACI,sBACIoD,EAAE,4kEAqBN,sBACIA,EAAE,6VC1BH,SAASC,EAAQrD,GAC5B,OACI,cAACmD,EAAA,EAAD,2BAAanD,GAAb,aACI,sBACIoD,EAAE,s4ECJH,SAASE,EAAQtD,GAC5B,OACI,cAACmD,EAAA,EAAD,2BAAanD,GAAb,aACI,sBACIoD,EAAE,+vCCJH,SAASG,EAAcvD,GAClC,OACI,cAACmD,EAAA,EAAD,2BAAanD,GAAb,aACI,sBACIoD,EAAE,8zCCJH,SAASI,EAAWxD,GAC/B,OACI,eAACmD,EAAA,EAAD,2BAAanD,GAAb,cACI,sBACIoD,EAAE,ihEAoBN,sBACIA,EAAE,wTCzBH,SAASK,EAAYzD,GAChC,OACI,eAACmD,EAAA,EAAD,2BAAanD,GAAb,cACI,sBACIoD,EAAE,4aAKN,sBACIA,EAAE,+fAMN,sBACIA,EAAE,yZAKN,sBACIA,EAAE,qnBAON,sBACIA,EAAE,4YCpBlB,IACMM,EAAU,CACZC,cAAc,GAAD,OAFF,eAEE,mBAGF,SAASC,EAAT,GAAuD,IAA/BC,EAA8B,EAA9BA,QAInC,OACI,cAACC,EAAA,EAAD,CAAQC,UAAWL,EAAQC,cAAe,aAAW,0BAArD,SACKK,EAAkBH,KAqD/B,IAAMG,EAAoB,SAACH,GAQvB,OPxDW,SAAuBA,GAClC,OAAKA,GAIDA,EAAQxB,MAAMM,EACPA,EAAekB,EAAQxB,IAJvBK,EAAYuB,UOsDfC,CAAcL,IAClB,KAAKnB,EAAYE,IACb,OAAO,cAACU,EAAD,IACX,KAAKZ,EAAYG,IACb,OAAO,cAACQ,EAAD,IACX,KAAKX,EAAYI,OACb,OAAO,cAACU,EAAD,IACX,KAAKd,EAAYK,KACb,OAAO,cAACG,EAAD,IACX,KAAKR,EAAYM,UACb,OAAO,cAACO,EAAD,IACX,KAAKb,EAAYO,QACb,OAAO,cAACQ,EAAD,IACX,QACI,OAAO,cAACU,EAAA,EAAD,MCvEbC,EAAS,aACTV,EAAU,CACZW,iBAAiB,GAAD,OAAKD,EAAL,qBAChBE,MAAM,GAAD,OAAKF,EAAL,UACLG,eAAe,GAAD,OAAKH,EAAL,mBACdI,WAAW,GAAD,OAAKJ,EAAL,eACVK,WAAW,GAAD,OAAKL,EAAL,eACVM,cAAc,GAAD,OAAKN,EAAL,mBAKXO,EAAaC,YAAOC,IAAPD,EAAa,kBAAGE,EAAH,EAAGA,MAAH,uCACrBpB,EAAQW,kBAAqB,CAChCU,SAAU,aAFc,2BAIrBrB,EAAQY,OAAU,CACrBU,OAAQ,IALgB,2BAOrBtB,EAAQa,gBAAmB,CAC9BQ,SAAU,WACVE,IAAKH,EAAMvC,QAAQ,GACnB2C,MAAOJ,EAAMvC,QAAQ,GACrByC,OAAQ,EACRG,gBAAiB,0BACjB,UAAW,CACPA,gBAAiB,2BAErB,UAAW,CACPA,gBAAiB,6BAjBG,2BAoBrBzB,EAAQc,YAAe,CAC1B7D,MAvBgB,UAwBhBwE,gBAAiB,6BAtBO,2BAwBrBzB,EAAQe,YAAe,CAC1BW,SAAU,IACVC,SAAU,GACVC,WAAY,OACZC,WAAY,MA5BY,2BA8BrB7B,EAAQgB,eAAkB,CAC7BU,SAAU,IACVzE,MAAOmE,EAAMU,QAAQC,KAAK,OAhCF,KAoChC,SAASC,EAAT,GAA2E,IAAD,MASlEC,EACuC,EAVzBzI,EAAoD,EAApDA,OAAoD,IAA5C0I,UAA4C,MAAvC,GAAuC,MAAnCC,UAAmC,MAA9B,EAA8B,MAA3BC,UAA2B,MAAtB,EAAsB,EAChEpE,EAAWC,cACjB,EAAkCoE,qBAAoB7I,EAAOsH,YAA7D,mBAAOA,EAAP,KAAmBwB,EAAnB,MAQA,UAAI9I,EAAO+I,oBAAX,aAAI,EAAqBC,kBACrBP,EAA2B9J,YAAgB,UAACqB,EAAO+I,oBAAR,aAAC,EAAqBC,kBAEjEP,EAA2B,MAG/B,IAAM9B,EAAO,UAAG3G,EAAOE,eAAV,aAAG,EAAgByG,QAC1BsC,EAAM,UAAGjJ,EAAOE,eAAV,aAAG,EAAgB+I,OAI/B,OACI,cAACC,EAAA,EAAD,CAAMlE,MAAI,EAAC0D,GAAIA,EAAIC,GAAIA,EAAIC,GAAIA,EAA/B,SACI,eAACnB,EAAD,WACI,eAAC0B,EAAA,EAAD,CAAKtC,UAAWL,EAAQW,iBAAxB,UACI,cAACiC,EAAA,EAAD,CAAgBC,UAAWC,IAASC,GAAE,kBAAavJ,EAAOmF,IAA1D,SACI,cAACqE,EAAA,EAAD,CACIH,UAAU,MACVxC,UAAWL,EAAQY,MACnBqC,MAAOzJ,EAAO0J,UAAP,8CAA0D1J,EAAO6B,MACxEzB,MAAM,qBAGd,cAACuJ,EAAA,EAAD,CACI9C,UAAW+C,YAAKpD,EAAQa,eAAT,eACVb,EAAQc,WAAaA,IAE1BhC,QAjCS,WACzBd,EAASqF,YAAe,CAAE1E,GAAInF,EAAOmF,GAAI2E,UAAWxC,KACpDwB,GAAaxB,IAgCG,aAAW,sBALf,SAOI,cAAC,IAAD,SAGR,cAACyC,EAAA,EAAD,CACIC,OAAQ,cAACtD,EAAD,CAAcC,QAASA,EAASsC,OAAQA,IAChD7I,MACI,cAAC6J,EAAA,EAAD,CAAYZ,UAAU,KAAKxC,UAAWL,EAAQe,WAAY2C,QAAM,EAAhE,SACKlK,EAAO6B,OAGhBsI,UACI,cAACF,EAAA,EAAD,CAAYpD,UAAWL,EAAQgB,cAAe0C,QAAM,EAApD,SACKzB,WASd2B,UAAMC,KAAK7B,G,iFChIpBtB,GAAS,eAETV,GAAU,CACZ8D,QAAQ,GAAD,OAAKpD,GAAL,YACPqD,KAAK,GAAD,OAAKrD,GAAL,SACJsD,IAAI,GAAD,OAAKtD,GAAL,SAGDuD,GAAc/C,YAAOgD,IAAPhD,EAAc,kBAAGE,EAAH,EAAGA,MAAH,UAC9B+C,MAAO,OACP1C,gBAAiB2C,YAAMhD,EAAMU,QAAQuC,WAAWC,MAAO,KAFzB,cAI7BtE,GAAQ8D,QAAU,CACfrC,gBAAiB2C,YAAMhD,EAAMU,QAAQyC,QAAQC,KAAM,OALzB,cAO7BxE,GAAQ+D,KAAO,CACZ9G,MAAOmE,EAAMU,QAAQ2C,KAAKC,YARA,cAU7B1E,GAAQgE,IAAM,CACXW,OAAQ,UACRC,eAAgB,SAZU,KAgBnB,SAASC,GAAT,GAAuD,IAA/BC,EAA8B,EAA9BA,QAC7BC,EAAWC,cAMjB,OACI,cAACC,EAAA,EAAD,UACI,eAAChB,GAAD,CAAazJ,KAAK,QAAQ,aAAW,UAArC,UACI,cAAC0K,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAU9E,UAAWL,GAAQ8D,QAA7B,UACI,cAACsB,EAAA,EAAD,CAAWC,MAAM,SAAShF,UAAWL,GAAQ+D,OAC7C,cAACqB,EAAA,EAAD,CAAWC,MAAM,SAAShF,UAAWL,GAAQ+D,KAA7C,oBAGA,cAACqB,EAAA,EAAD,CAAWC,MAAM,SAAShF,UAAWL,GAAQ+D,KAA7C,kBAGA,cAACqB,EAAA,EAAD,CAAWC,MAAM,SAAShF,UAAWL,GAAQ+D,KAA7C,mBAGA,cAACqB,EAAA,EAAD,CAAWC,MAAM,SAAShF,UAAWL,GAAQ+D,KAA7C,wBAGA,cAACqB,EAAA,EAAD,CAAWC,MAAM,SAAShF,UAAWL,GAAQ+D,KAA7C,iBAGA,cAACqB,EAAA,EAAD,CAAWC,MAAM,SAAShF,UAAWL,GAAQ+D,KAA7C,6BAKR,cAACuB,EAAA,EAAD,UACKR,EAAQ3K,KAAI,SAAAX,GAAM,eACf,eAAC2L,EAAA,EAAD,CAA2BI,OAAK,EAACzG,QAAS,kBAhC1C0G,EAgC0D,OAAChM,QAAD,IAACA,OAAD,EAACA,EAAQmF,QA/BnFoG,EAAS,WAAD,OAAYS,IADL,IAACA,GAgCwEnF,UAAWL,GAAQgE,IAA3F,UACI,cAACoB,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACI,cAACjF,EAAA,EAAD,CACIqF,IAAI,iBACJC,KACU,OAANlM,QAAM,IAANA,OAAA,EAAAA,EAAQ0J,UAAR,OACM1J,QADN,IACMA,OADN,EACMA,EAAQ0J,SADd,qDAE6C1J,QAF7C,IAE6CA,OAF7C,EAE6CA,EAAQ6B,UAIjE,cAAC+J,EAAA,EAAD,CAAWC,MAAM,SAAjB,iBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,gBAA2B7L,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAQ6B,OACnC,cAAC+J,EAAA,EAAD,CAAWC,MAAM,SAAjB,oBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,gBAA2B7L,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAQE,eAAnC,aAA2B,EAAiBJ,SAC5C,cAAC8L,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BrM,aAAY,OAACQ,QAAD,IAACA,GAAD,UAACA,EAAQE,eAAT,aAAC,EAAiBG,aACzD,cAACuL,EAAA,EAAD,CAAWC,MAAM,SAAjB,6BAhBJ,OAAe7L,QAAf,IAAeA,OAAf,EAAeA,EAAQmF,c,cC1DzC+B,GAAS,oBACTV,GAAU,CACZ2F,QAAQ,GAAD,OAAKjF,GAAL,YACPkF,QAAQ,GAAD,OAAKlF,GAAL,aAGLmF,GAAO3E,YAAO,MAAPA,EAAc,kBAAGE,EAAH,EAAGA,MAAH,UACvB0E,UAAW1E,EAAMvC,QAAQ,IADF,cAEtBmB,GAAQ2F,QAAU,CACfI,SAAU,SAHS,cAKtB/F,GAAQ4F,QALc,eAMlBxE,EAAM4E,YAAYC,KAAK,MAAQ,CAC5B/I,OAAQ,YAPO,KAYZ,SAASgJ,GAAT,GAMa,IALxBC,EAKuB,EALvBA,MACAC,EAIuB,EAJvBA,KACAC,EAGuB,EAHvBA,aACAC,EAEuB,EAFvBA,SACAC,EACuB,EADvBA,iBAWA,OACI,cAAC7D,EAAA,EAAD,CAAM9D,WAAS,EAAC4H,eAAe,WAA/B,SACI,cAACX,GAAD,UACI,cAACY,GAAA,EAAD,CACI5D,UAAU,MACVsD,MAAOA,EACPC,KAAMA,EACNC,aAhBhB,SAA0BK,EAAOC,GAC7BN,EAAaM,IAgBDC,YAAaN,EACbO,mBAAoB,CAAC,EAAG,GAAI,GAAI,KAChCC,oBAfhB,SAAiCJ,GAC7B,IAAMlM,EAAOjC,SAASmO,EAAMK,OAAOhP,MAAO,IAC1CwO,EAAiB/L,IAcLwF,QAAS,CACL2F,QAAS3F,GAAQ2F,QACjBC,QAAS5F,GAAQ4F,SAErBoB,iBAAiB,uB,cCnDtB,SAASC,GAAT,GAAwE,IAAxCC,EAAuC,EAAvCA,SACrClJ,EAAWC,cAEjB,EAAwCE,aAAe,SAAAjC,GAAK,OAAIA,EAAM4I,WAA9DqC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,SAC3B,EAAkClJ,aAAe,SAAAjC,GAAK,OAAIA,EAAMoL,aAAxDC,EAAR,EAAQA,YAAajB,EAArB,EAAqBA,SAGfkB,GAAwB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUI,aAAc,EAE9C,GAAgB,YAAZN,EACA,OAAO,cAACO,EAAA,EAAD,CAAUC,UAAU,OAAO3K,QAAQ,cAAc4K,OAAQ,IAAKzD,MAAM,SAG/E,GAAsB,IAAlBqD,EAEA,OAAO,wCAeX,OACI,qCACKN,IAAa7M,KAAgBQ,MAC1B,cAACgK,GAAD,CAAcC,QAASsC,IAEvB,cAAC1E,EAAA,EAAD,CAAM9D,WAAS,EAACiE,UAAU,KAAKhE,QAAS,EAAG2H,eAAe,SAA1D,SACKY,EAASjN,KAAI,SAAAX,GAAM,OAChB,cAAC,EAAD,CAA4BA,OAAQA,GAAnBA,EAAOmF,SAIpC,cAACuH,GAAD,CACIC,MAAOqB,EACPpB,KAAMmB,EACNlB,aAtBZ,SAA0BM,GAElB3I,EADA2I,EAAUY,EACDM,YAAaR,GAEbS,YAAiBT,KAmBtBf,SAAUA,EACVC,iBA5BZ,SAA8B/L,GAC1BwD,EAAS+J,YAAYvN,Y,6PCpBvBwN,EAAW,u9BACXC,EAAW,u9BACXC,EAAU,qyCAED,SAASC,IACpB,MAA8BvM,cAAtBC,EAAR,EAAQA,QAASuM,EAAjB,EAAiBA,SAEXjI,EAAUkI,YAAS,CACrBxM,UACAR,KAAM,UACNC,aAAc,OAGZgN,EAAcxN,YAAY,CAAEqF,YAgBlC,OAdAlF,qBAAU,WACN,IAAMsN,OACcC,IAAhBF,GAAqD,OAAxBA,EAAYnI,SAAoBmI,EAAYnI,UAAYA,EACpFA,IAAWoI,GACZH,EAAS,QAAS,QAGvB,CAACjI,EAASiI,IAQT,qCACI,cAACzF,EAAA,EAAD,CAAKmD,UAAW,IAAK2C,aAAc,IAAnC,SACI,cAACnL,EAAA,EAAD,CACIjC,KAAK,UACLI,MAAM,UACN8B,WAAY,CAAEG,MAAOsK,EAAarK,UAAW,CAAE+K,SAAU,MAAQ7K,KAAM,eAG/E,cAAC8E,EAAA,EAAD,CAAKmD,UAAW,IAAK2C,aAAc,IAAnC,SACI,cAACnL,EAAA,EAAD,CACIjC,KAAK,QACLI,MAAM,QACNF,UAAW4E,EACX5C,WAAY,CACRG,MAAOwK,EACPvK,UAAW,CAAEwC,UAAU,OAACA,QAAD,IAACA,OAAD,EAACA,EAAqBxB,KAAM,IAAIgK,WAAYD,SAAU,MAC7E7K,KAAM,cAIlB,cAAC8E,EAAA,EAAD,CAAKmD,UAAW,IAAK2C,aAAc,IAAnC,SACI,cAACnL,EAAA,EAAD,CACIjC,KAAK,SACLI,MAAM,SACN8B,WAAY,CAAEG,MAAOuK,EAAatK,UAAW,CAAE+K,SAAU,MAAQ7K,KAAM,kBC3C5E,SAAS+K,IACpB,IAAMxH,EAAQyH,cACRC,EAAaC,YAAc3H,EAAM4E,YAAYC,KAAK,OAExD,EAAoC5D,oBAAS,GAA7C,mBAAO2G,EAAP,KAAmBC,EAAnB,KACMjL,EAAWC,cAEXC,EAAUC,aAAe,SAAAjC,GAAK,OAAIA,EAAMgC,WACtCuJ,EAAetJ,aAAe,SAAAjC,GAAK,OAAIA,EAAM4I,QAAQuC,UAAY,MAAjEI,WAEFyB,EAAUC,YAAQ,CAAEC,cAAelL,IACjCmL,EAAwBH,EAAxBG,aAAcC,EAAUJ,EAAVI,MAChBC,EAAUvO,iBAAwB,MAExCC,qBAAU,WACNqO,EAAMpL,KACP,CAACA,EAASoL,IAEb,IAIME,EAAoB,WACtBP,GAAc,IAalB,OACI,eAACvG,EAAA,EAAD,CAAM9D,WAAS,EAAC6K,WAAW,SAAS5K,QAAS,EAA7C,UACI,cAAC6D,EAAA,EAAD,CAAMlE,MAAI,EAAV,SAAYiJ,IACZ,cAAC/E,EAAA,EAAD,CAAMlE,MAAI,EAAV,SACI,cAAC2E,EAAA,EAAD,CAAY,aAAW,qBAAqB,gBAAc,OAAOrE,QAtBpD,WACrBmK,GAAc,IAqBN,SACI,cAAC,IAAD,QAGR,cAACS,EAAA,EAAD,CACIC,WAAS,EACTjI,SAAS,KACTkI,KAAMZ,EACNF,WAAYA,EACZe,QAASL,EACT,kBAAgB,sBANpB,SAQI,eAAC,IAAD,2BAAkBN,GAAlB,cACI,eAACvG,EAAA,EAAD,CAAKmH,QAAQ,OAAOtD,eAAe,gBAAgBiD,WAAW,SAASM,YAAa,IAApF,UACI,cAACC,EAAA,EAAD,CAAarL,GAAG,sBAAhB,4BACA,cAACsL,EAAA,EAAD,CAAQnL,QA7BL,WACnBwK,EAAM,KA4BU,0BAEJ,cAACY,EAAA,EAAD,UACI,cAACxH,EAAA,EAAD,CAAMG,UAAU,OAAO9H,IAAKwO,EAA5B,SACI,cAACpB,EAAD,QAGR,cAACxF,EAAA,EAAD,CAAK8F,aAAc,EAAGsB,YAAa,EAAnC,SACI,eAACI,EAAA,EAAD,WACI,cAACF,EAAA,EAAD,CAAQjN,QAAQ,WAAW8B,QAAS0K,EAApC,oBAGA,cAACS,EAAA,EAAD,CAAQjN,QAAQ,YAAY8B,QAASuK,GApC5C,SAAAe,GACbZ,IACAxL,EAASqM,YAAWD,OAkC6DnN,MAAM,YAAYqN,WAAS,EAAxF,mC,4KC7B5B,SAASC,EAAT,GAAsE,IAAhDrD,EAA+C,EAA/CA,SAAU3M,EAAqC,EAArCA,SAAUiQ,EAA2B,EAA3BA,OACtC,OACI,eAAC,IAAD,CAAM5L,WAAS,EAACC,QAAS,EAAG4K,WAAW,SAAvC,UACI,eAAC,IAAD,CAAM7K,WAAS,EAACJ,MAAI,EAAC0D,GAAI,GAAIuH,WAAW,SAAS5K,QAAS,EAA1D,UACI,cAAC,IAAD,CAAML,MAAI,EAAV,SACI,cAAC,IAAD,MAEJ,cAAC,IAAD,CAAMA,MAAI,EAAV,SACI,cAAC,IAAD,UAGNgM,GACE,cAAC,IAAD,CAAMhM,MAAI,EAAC0D,GAAI,EAAGuI,MAAO,CAAEC,UAAW,SAAtC,SACI,cAAC,IAAD,CAAc3S,MAAOmP,EAAU3M,SAAUA,SAO9CoQ,UAjEf,WACI,IAAMvJ,EAAQyH,cACR7K,EAAWC,cAGjB,EAAgCoE,mBAA0BhI,IAAgBO,MAA1E,mBAAOsM,EAAP,KAAiB0D,EAAjB,KACMJ,EAASzB,YAAc3H,EAAM4E,YAAYC,KAAK,OAE9C4E,EAAQC,YAAS,cACjBC,EAAWC,cAEF1D,EAAcnJ,aAAe,SAAAjC,GAAK,OAAIA,EAAMoL,aAAnD5J,MACAuN,EAA4B9M,aAAe,SAAAjC,GAAK,OAAIA,EAAM4I,WAA1DmG,wBAuBR,OArBAhQ,qBAAU,WACFuP,GAAUtD,IAAa7M,IAAgBQ,OACvC+P,EAAYvQ,IAAgBO,QAEjC,CAAC4P,EAAQtD,IAMZjM,qBAAU,WACN+C,EAASkN,iBACV,CAAClN,EAAU+M,EAASI,WAEvBlQ,qBAAU,WACF4P,GACA7M,EAASoN,YAAa,CAAEC,gBAAgB,OAG7C,CAACrN,EAAUsJ,EAAW2D,IAGrB,cAAC,IAAD,CACIrR,MAAM,YACN0R,WAAY,cAACf,EAAD,CAAYrD,SAAUA,EAAU3M,SAlB3B,WACrBqQ,EAAY1D,IAAa7M,IAAgBQ,MAAQR,IAAgBO,KAAOP,IAAgBQ,QAiBZ2P,OAAQA,IAFpF,SAII,cAAC,IAAD,CAAsBtD,SAAUA","file":"static/js/10.d9c4cea5.chunk.js","sourcesContent":["export const capitalizeFirstLetter = (value: string): string => value.charAt(0).toUpperCase() + value.slice(1);\n","import { format, getTime, isValid, parse } from 'date-fns';\nimport ltLocale from 'date-fns/locale/lt';\n\nexport const getYMDDateFromTS = (timestamp: string | null = ''): string => {\n    if (timestamp) {\n        const date: Date = new Date(parseInt(timestamp, 10));\n        return format(date, 'yyyy-MM-dd', { locale: ltLocale });\n    }\n\n    return '';\n};\n\nexport const getTSDateFromYMD = (datestr: string | null = ''): string => {\n    if (datestr) {\n        const result = parse(datestr, 'yyyy-MM-dd', new Date());\n        return isValid(result) ? getTime(result).toString() : '';\n    }\n\n    return '';\n};\n\nexport const getTSDateFromYMDFlexible = (datestr: string | null = ''): string => {\n    if (datestr) {\n        const result = getDateYMDFlexible(datestr);\n        if (result === false) {\n            return '';\n        }\n        // incoming datestr is still a string, but adjusted/transformed to a valid date\n        const dateResult = Date.parse(datestr);\n        return getTime(dateResult).toString();\n    }\n\n    return '';\n};\n\nexport const getDateYMDFlexible = (datestr: string | null = ''): string | boolean => {\n    if (datestr) {\n        let result = parse(datestr, 'yyyy-MM-dd', new Date());\n        if (isValid(result)) {\n            return format(result, 'yyyy-MM-dd');\n        }\n        result = parse(datestr, 'yyyy-MM', new Date());\n        if (isValid(result)) {\n            return format(result, 'yyyy-MM-dd');\n        }\n        result = parse(datestr, 'yyyy', new Date());\n        if (isValid(result)) {\n            return format(result, 'yyyy-MM-dd');\n        }\n    }\n    return false;\n};\n","import { formatDistance } from 'date-fns';\nimport ltLocale from 'date-fns/locale/lt';\n\nimport { Animal } from '../graphql/types';\nimport { capitalizeFirstLetter } from './string';\n\nexport const getAnimalAge = (birthTimestamp: string | null = ''): string => {\n    if (birthTimestamp) {\n        const distance = formatDistance(Number(birthTimestamp), new Date(), { locale: ltLocale });\n        return capitalizeFirstLetter(distance);\n    }\n\n    return '';\n};\n\nexport const getAnimalWeight = (weight: number): string => (weight ? `${weight}kg` : '');\n\nexport const sortAnimalsByDate = (animal1: Animal, animal2: Animal, descending = true) => {\n    if (!animal1 || !animal2) {\n        return 0;\n    }\n\n    const date1 = parseInt(animal1.modTime as string, 10);\n    const date2 = parseInt(animal2.modTime as string, 10);\n\n    return descending ? date2 - date1 : date1 - date2;\n};\n\nexport const getAnimalDetails = (animal: Animal) => {\n    const { details: animalDetails } = animal;\n\n    const birthDay = {\n        title: 'Birthday',\n        value: animalDetails?.birthDate ? getAnimalAge(animalDetails.birthDate) : '',\n    };\n\n    const weight = {\n        title: 'Weight',\n        value: animalDetails?.weight ? getAnimalWeight(animalDetails.weight) : '',\n    };\n\n    const otherDetails = animalDetails\n        ? Object.keys(animalDetails)\n              .filter(key => {\n                  return typeof animalDetails[key] === 'object' && animalDetails[key] !== null;\n              })\n              .map(key => {\n                  return { title: animalDetails[key].__typename, value: animalDetails[key].value };\n              })\n        : [];\n\n    return [birthDay, ...otherDetails, weight];\n};\n","import React from 'react';\n\nimport ReorderIcon from '@mui/icons-material/Reorder';\nimport ViewModuleIcon from '@mui/icons-material/ViewModule';\nimport { ToggleButton, ToggleButtonGroup } from '@mui/material';\n\ninterface ViewSelectorProps {\n    value: AnimalsViewType;\n    onChange: (type: AnimalsViewType) => void;\n}\n\nexport default function ViewSelector({ value, onChange }: ViewSelectorProps) {\n    return (\n        <ToggleButtonGroup\n            size=\"small\"\n            exclusive\n            value={value}\n            onChange={(e, val) => onChange(val as AnimalsViewType)}\n            aria-label=\"view selector\"\n        >\n            <ToggleButton value={AnimalsViewType.LIST} aria-label={AnimalsViewType.LIST}>\n                <ViewModuleIcon />\n            </ToggleButton>\n            <ToggleButton value={AnimalsViewType.TABLE} aria-label={AnimalsViewType.TABLE}>\n                <ReorderIcon />\n            </ToggleButton>\n        </ToggleButtonGroup>\n    );\n}\n\nexport enum AnimalsViewType {\n    LIST = 'list',\n    TABLE = 'table',\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious<T>(value: T): T | undefined {\n    const ref = useRef<T>();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n","import React from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\n\nimport { Autocomplete, createFilterOptions, TextField } from '@mui/material';\nimport { capitalizeFirstLetter } from '../../utils/string';\n\nconst OPTIONS_LIMIT = 100;\n\nexport default function Selector({\n    options,\n    name,\n    defaultValue,\n    disabled,\n    optionsLimit = OPTIONS_LIMIT,\n    label,\n    required = false,\n    multiple = false,\n}: SelectorProps) {\n    const {\n        control,\n        formState: { errors },\n    } = useFormContext();\n\n    const limitOptions = (opts, state) =>\n        createFilterOptions<DynamicSelectorOption | string>()(opts, state).slice(0, optionsLimit);\n\n    return (\n        <Controller\n            defaultValue={defaultValue ?? null}\n            rules={{ required: required ? 'Required' : false }}\n            render={props => (\n                <Autocomplete<DynamicSelectorOption | string, boolean>\n                    {...props}\n                    value={props.field.value ?? null}\n                    options={options ?? []}\n                    filterOptions={limitOptions}\n                    getOptionLabel={option => (typeof option === 'string' ? option : option.value)}\n                    // getOptionSelected={(option, value) =>\n                    //     typeof option === 'string'\n                    //         ? option === value\n                    //         : (option as DynamicSelectorOption)?.id === (value as DynamicSelectorOption)?.id\n                    // }\n                    onChange={(_, option) => {\n                        props.field.onChange(option);\n                    }}\n                    disabled={disabled}\n                    multiple={multiple}\n                    renderInput={params => (\n                        <TextField\n                            {...params}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            margin=\"dense\"\n                            error={!!errors[name]}\n                            label={label ?? capitalizeFirstLetter(name)}\n                            helperText={errors[name]?.message ?? required ? 'Required' : 'Optional'}\n                        />\n                    )}\n                />\n            )}\n            name={name}\n            control={control}\n        />\n    );\n}\n\nexport interface SelectorProps {\n    options?: string[] | DynamicSelectorOption[];\n    name: string;\n    disabled?: boolean;\n    defaultValue?: string | undefined;\n    optionsLimit?: number;\n    label?: string;\n    helperText?: string;\n    required?: boolean;\n    multiple?: boolean;\n}\n\nexport interface DynamicSelectorOption {\n    id: string;\n    value: string;\n}\n","import { DocumentNode } from 'graphql';\nimport React from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport Selector, { DynamicSelectorOption, SelectorProps } from './Selector';\n\nexport default function DynamicSelector({\n    gqlOptions,\n    name,\n    defaultValue,\n    multiple,\n    disabled,\n    helperText,\n    required,\n    label,\n}: DynamicSelectorProps) {\n    const { data } = useQuery<GqlResponse>(gqlOptions.query, {\n        variables: gqlOptions.variables,\n        skip: disabled,\n    });\n\n    return (\n        <Selector\n            options={data ? data[gqlOptions.type] : []}\n            name={name}\n            helperText={helperText}\n            defaultValue={defaultValue}\n            multiple={multiple}\n            disabled={disabled}\n            required={required}\n            label={label}\n        />\n    );\n}\n\nexport interface DynamicSelectorProps extends SelectorProps {\n    gqlOptions: { query: DocumentNode; variables?: Record<string, any>; type: string };\n}\n\ninterface GqlResponse {\n    options: DynamicSelectorOption[];\n}\n","import React from 'react';\n\nimport { Button, Chip, Grid } from '@mui/material';\nimport { useAppDispatch, useAppSelector } from '../../../store';\nimport { deleteFilter, resetFilters } from '../../../store/filters';\n\nconst FILTER_PROPS = ['species', 'gender', 'breed'];\n\nexport default function AnimalFiltersChips() {\n    const dispatch = useAppDispatch();\n    const filters = useAppSelector(state => state.filters);\n\n    const hasFilters = Object.keys(filters).filter(key => FILTER_PROPS.includes(key)).length > 0;\n\n    const handleClearFilters = () => {\n        dispatch(resetFilters());\n    };\n\n    const onDelete = type => {\n        dispatch(deleteFilter(type));\n    };\n\n    const filterChip = (type, filter) => (\n        <Grid item key={`${type}-${filter.id}`}>\n            <Chip label={filter.value} onDelete={() => onDelete(type)} />\n        </Grid>\n    );\n\n    if (hasFilters) {\n        return (\n            <Grid container spacing={1}>\n                {Object.keys(filters).map(type => {\n                    if (filters[type]) {\n                        return filterChip(type, filters[type]);\n                    }\n                })}\n                <Button onClick={handleClearFilters}>Clear</Button>\n            </Grid>\n        );\n    } else {\n        return null;\n    }\n}\n","import { Maybe, Species } from '../types';\n\n// available GraphQL enums\n//   {\n//     species(language:\"lt\") {\n//       id,\n//       value\n//     }\n//   }\n\nexport enum SpeciesType {\n    DOG,\n    CAT,\n    RABBIT,\n    BIRD,\n    GUINEAPIG,\n    REPTILE,\n    UNDEFINED = 'undefined',\n}\n\nconst SpeciesMapList: {\n    [key: string]: SpeciesType;\n} = {\n    '1': SpeciesType.DOG,\n    '2': SpeciesType.CAT,\n    '4': SpeciesType.RABBIT,\n    '10': SpeciesType.BIRD,\n    '11': SpeciesType.GUINEAPIG,\n    '13': SpeciesType.REPTILE,\n};\n\nexport default function getSpecieType(species?: Maybe<Species>): SpeciesType {\n    if (!species) {\n        return SpeciesType.UNDEFINED;\n    }\n\n    if (species.id in SpeciesMapList) {\n        return SpeciesMapList[species.id];\n    }\n\n    return SpeciesType.UNDEFINED;\n}\n","import React from 'react';\n\nimport { SvgIcon, SvgIconProps } from '@mui/material';\n\nexport default function IconBird(props: SvgIconProps) {\n    return (\n        <SvgIcon {...props}>\n            <path\n                d=\"M17.195,22.989c-0.114,0-0.229,0-0.343,0c-0.231-0.104-0.374-0.288-0.503-0.501c-0.698-1.148-1.403-2.292-2.107-3.436\n\t\tc-0.208-0.338-0.431-0.424-0.814-0.35c-0.378,0.072-0.758,0.151-1.141,0.183c-1.468,0.124-2.857-0.15-4.025-1.076\n\t\tc-2.151-1.706-3.32-3.958-3.511-6.702c-0.037-0.535-0.214-0.749-0.747-0.791c-0.627-0.049-1.256-0.082-1.882-0.141\n\t\tC1.668,10.132,1.444,9.819,1.512,9.37C1.533,9.229,1.55,9.086,1.571,8.945c0.104-0.707,0.162-1.424,0.324-2.118\n\t\tc0.275-1.176,1.018-1.98,2.18-2.32C5.251,4.162,6.318,4.433,7.201,5.29c1.016,0.987,2.006,2,3.007,3.001\n\t\tc0.028,0.028,0.052,0.061,0.106,0.125c-0.068,0.05-0.131,0.087-0.182,0.137C9.776,8.905,9.42,9.257,9.07,9.616\n\t\tc-0.215,0.22-0.253,0.491-0.124,0.749c0.123,0.244,0.388,0.405,0.656,0.336c0.169-0.044,0.341-0.15,0.466-0.275\n\t\tc3.025-3.014,6.042-6.035,9.065-9.051c0.138-0.138,0.31-0.243,0.466-0.363c0.1,0,0.2,0,0.3,0c0.092,0.052,0.205,0.086,0.273,0.16\n\t\tc0.341,0.372,0.67,0.755,1.009,1.14c-0.087,0.092-0.139,0.149-0.194,0.204c-1.006,1.007-2.011,2.014-3.02,3.018\n\t\tc-0.161,0.161-0.261,0.342-0.235,0.572c0.03,0.264,0.167,0.455,0.423,0.542c0.271,0.091,0.503,0.017,0.704-0.184\n\t\tc0.925-0.926,1.852-1.85,2.774-2.778c0.054-0.054,0.078-0.137,0.116-0.207c0.041,0.016,0.082,0.032,0.123,0.048\n\t\tc0.16,0.546,0.316,1.093,0.482,1.636c0.051,0.165,0.01,0.273-0.112,0.394C21.116,6.674,19.997,7.8,18.872,8.92\n\t\tc-0.161,0.16-0.264,0.34-0.24,0.57c0.028,0.264,0.166,0.454,0.422,0.543c0.272,0.094,0.504,0.019,0.703-0.18\n\t\tc0.849-0.85,1.699-1.699,2.549-2.548c0.053-0.053,0.11-0.101,0.193-0.178c-0.03,0.799-0.182,1.528-0.426,2.239\n\t\tc-0.514,1.499-1.465,2.689-2.654,3.701c-1.048,0.892-2.266,1.415-3.64,1.51c-0.812,0.056-1.629,0.032-2.444,0.043\n\t\tc-0.419,0.005-0.705,0.263-0.706,0.641c0,0.379,0.285,0.643,0.702,0.645c0.529,0.002,1.059-0.004,1.588,0.002\n\t\tc0.82,0.009,1.625-0.083,2.418-0.298c0.074-0.02,0.196,0.016,0.251,0.071c1.391,1.381,2.776,2.767,4.16,4.154\n\t\tc0.387,0.388,0.302,0.884-0.194,1.117c-0.691,0.325-1.387,0.642-2.079,0.965C18.716,22.273,17.956,22.632,17.195,22.989z\n\t\t M4.444,7.381c0.011-0.351-0.271-0.65-0.622-0.661C3.47,6.71,3.171,6.991,3.16,7.342C3.149,7.69,3.433,7.992,3.782,8.005\n\t\tC4.128,8.017,4.433,7.73,4.444,7.381z\"\n            />\n            <path\n                d=\"M12.688,1.011c0.799,0.392,1.55,0.855,2.189,1.482c0.218,0.214,0.424,0.44,0.621,0.645\n\t\tc-1.447,1.447-2.872,2.872-4.312,4.312c-0.442-0.443-0.898-0.896-1.344-1.358C9.805,6.055,9.821,5.935,9.85,5.872\n\t\tc0.547-1.187,1.1-2.371,1.652-3.556c0.121-0.259,0.254-0.513,0.36-0.778c0.103-0.255,0.264-0.436,0.524-0.527\n\t\tC12.487,1.011,12.587,1.011,12.688,1.011z\"\n            />\n        </SvgIcon>\n    );\n}\n","import React from 'react';\n\nimport { SvgIcon, SvgIconProps } from '@mui/material';\n\nexport default function IconCat(props: SvgIconProps) {\n    return (\n        <SvgIcon {...props}>\n            <path\n                d=\"M1.217,19.325c0.113-0.419,0.238-0.831,0.516-1.181c0.619-0.779,1.437-1.063,2.403-0.971\n\t\tc0.297,0.028,0.52,0.291,0.534,0.588c0.015,0.295-0.184,0.577-0.477,0.635c-0.17,0.034-0.348,0.025-0.523,0.034\n\t\tc-0.624,0.033-1.114,0.493-1.182,1.109c-0.066,0.601,0.336,1.173,0.938,1.322C3.533,20.889,3.648,20.9,3.759,20.9\n\t\tc0.983,0.002,1.965,0.001,2.948-0.001c0.046,0,0.092-0.009,0.161-0.016c-0.033-0.059-0.054-0.1-0.078-0.141\n\t\tc-0.29-0.488-0.428-1.018-0.428-1.584c0-0.919-0.005-1.839,0.001-2.758c0.017-2.808,1.815-5.163,4.52-5.929\n\t\tc0.621-0.176,1.254-0.212,1.895-0.219c0.247-0.003,0.513-0.038,0.735-0.138c0.597-0.267,0.865-0.765,0.877-1.413\n\t\tc0.01-0.547-0.024-1.102,0.061-1.638c0.203-1.281,0.933-2.194,2.089-2.777c0.1-0.05,0.198-0.154,0.242-0.256\n\t\tc0.253-0.585,0.49-1.177,0.729-1.768c0.084-0.208,0.222-0.357,0.442-0.415c0.4-0.104,0.777,0.173,0.788,0.59\n\t\tc0.012,0.463,0.011,0.926,0.006,1.39c-0.002,0.141,0.042,0.192,0.185,0.211c1.033,0.14,1.813,0.665,2.344,1.563\n\t\tc0.044,0.074,0.115,0.141,0.188,0.188c0.284,0.181,0.57,0.358,0.862,0.527c0.207,0.12,0.374,0.269,0.457,0.499\n\t\tc0,0.098,0,0.197,0,0.295c-0.1,0.465-0.206,0.929-0.296,1.395c-0.05,0.255-0.164,0.451-0.382,0.601\n\t\tc-0.353,0.242-0.698,0.495-1.036,0.757c-0.069,0.053-0.126,0.166-0.128,0.253c-0.012,0.533-0.001,1.067-0.008,1.6\n\t\tc-0.023,1.788-0.568,3.4-1.629,4.84c-0.061,0.082-0.099,0.202-0.1,0.305c-0.008,0.737-0.004,1.474-0.004,2.211\n\t\tc0,0.181,0,0.362,0,0.547c0.081,0.015,0.142,0.027,0.204,0.037c0.617,0.099,1.075,0.651,1.06,1.276\n\t\tc-0.015,0.628-0.497,1.171-1.12,1.218c-0.383,0.029-0.771,0.018-1.156,0.003c-0.378-0.016-0.707-0.175-0.98-0.434\n\t\tc-0.22-0.209-0.389-0.439-0.403-0.776c-0.046-1.105-0.894-2.018-1.992-2.17c-0.212-0.029-0.428-0.035-0.657-0.053\n\t\tc0-0.088,0-0.164,0-0.241c-0.001-0.625,0.01-1.249-0.006-1.874c-0.051-2.02-1.809-3.724-3.831-3.724\n\t\tc-0.395,0-0.677,0.253-0.685,0.615c-0.008,0.367,0.258,0.632,0.652,0.648c1.524,0.063,2.6,1.184,2.604,2.712\n\t\tc0.002,0.821-0.002,1.642,0.002,2.463c0.002,0.423,0.262,0.679,0.685,0.682c0.302,0.003,0.604-0.006,0.905,0.003\n\t\tc0.507,0.015,0.952,0.324,1.023,0.807c0.064,0.436,0.013,0.888,0.013,1.357c-0.101,0-0.205,0-0.309,0\n\t\tc-3.228,0.001-6.456,0.002-9.684,0.001c-0.667,0-1.334,0.014-1.999-0.021c-0.749-0.039-1.344-0.396-1.805-0.987\n\t\tc-0.27-0.346-0.39-0.752-0.502-1.164C1.217,19.775,1.217,19.55,1.217,19.325z M20.034,7.242c0.346,0.002,0.632-0.274,0.639-0.618\n\t\tc0.007-0.346-0.291-0.647-0.638-0.643c-0.343,0.003-0.623,0.288-0.624,0.633C19.411,6.963,19.685,7.239,20.034,7.242z\"\n            />\n        </SvgIcon>\n    );\n}\n","import React from 'react';\n\nimport { SvgIcon, SvgIconProps } from '@mui/material';\n\nexport default function IconDog(props: SvgIconProps) {\n    return (\n        <SvgIcon {...props}>\n            <path\n                d=\"M22.042,6.19l-2.2-0.887c-0.134-0.71-0.674-1.279-1.368-1.455l-0.119-1.371c-0.017-0.196-0.148-0.362-0.334-0.425\n\ts-0.392-0.009-0.523,0.136l-0.575,0.635L16.57,1.587c-0.059-0.206-0.244-0.35-0.457-0.358c-0.214-0.007-0.408,0.124-0.481,0.325\n\tl-3.046,8.403c-2.191,0.569-4.104,1.971-5.28,3.879c-1.076,1.747-1.411,3.75-0.941,5.638c0.274,1.103,0.795,1.83,1.328,2.307H7.274\n\tc-0.004,0-0.008,0-0.012,0c-1.982,0.048-3.819-1.078-4.676-2.869c-0.118-0.246-0.413-0.35-0.658-0.232\n\tc-0.246,0.118-0.35,0.413-0.232,0.658c1.004,2.097,3.131,3.431,5.446,3.431c0.046,0,9.424,0,9.424,0\n\tc0.273,0,0.494-0.221,0.494-0.494c0-1.154-0.8-1.762-1.623-2.047h-2.14c-0.276,0-0.5-0.224-0.5-0.5V19.41\n\tc0-1.465-1.192-2.656-2.657-2.656c-0.276,0-0.5-0.224-0.5-0.5s0.224-0.5,0.5-0.5c1.956,0,3.558,1.543,3.652,3.475h1.597\n\tc0.116-0.475,0.132-0.894,0.101-1.202l0.129-0.017l2.959,4.537c0.091,0.14,0.247,0.224,0.414,0.224h1.797\n\tc0.18,0,0.345-0.098,0.432-0.255s0.081-0.35-0.015-0.502c-0.019-0.03-1.874-2.975-2.871-4.624V9.096\n\tc0.147,0.017,0.312,0.025,0.457,0.025c1.432,0,2.779-0.808,3.504-2.24c0.001-0.001,0.019-0.04,0.022-0.047\n\tC22.417,6.58,22.295,6.292,22.042,6.19z M18.318,6.23c-0.349-0.002-0.623-0.279-0.623-0.628c0-0.345,0.281-0.63,0.624-0.633\n\tc0.347-0.003,0.645,0.297,0.638,0.643C18.95,5.956,18.665,6.233,18.318,6.23z\"\n            />\n        </SvgIcon>\n    );\n}\n","import React from 'react';\n\nimport { SvgIcon, SvgIconProps } from '@mui/material';\n\nexport default function IconGuineapig(props: SvgIconProps) {\n    return (\n        <SvgIcon {...props}>\n            <path\n                d=\"M3.75,17.624h0.001c-0.244,0.324-0.376,0.719-0.376,1.125v0.375h-0.75v-0.375C2.626,18.128,3.129,17.625,3.75,17.624z\n\t\t M22.5,13.79v5.334H15v-0.75h-0.75v0.75H13.5v-0.375c0.001-0.621,0.504-1.124,1.125-1.125h1.5c0.207,0,0.375-0.168,0.375-0.375\n\t\tc0.002-1.656,1.344-2.998,3-3h0.75v-0.75H19.5c-1.925,0.003-3.536,1.46-3.731,3.375h-1.144c-1.035,0.001-1.874,0.84-1.875,1.875\n\t\tv0.375H9.155l1.235-1.235l-0.53-0.53l-1.765,1.765h-2.47v-0.75h-0.75v0.75h-0.75V18.75c0.001-0.621,0.504-1.124,1.125-1.125h1.5\n\t\tc0.099,0,0.195-0.039,0.265-0.11l1.5-1.5l-0.53-0.53l-1.39,1.39H6.447l-0.308-0.429l-4.144-5.755\n\t\tC1.672,10.245,1.499,9.708,1.5,9.157V8.999c0-0.207,0.168-0.375,0.375-0.375H2.25v-0.75H1.875c-0.124,0-0.247,0.02-0.364,0.061\n\t\tc0.03-0.252,0.125-0.491,0.277-0.694c1.117-1.49,2.87-2.366,4.732-2.366c1.706,0,3.329,0.737,4.452,2.02\n\t\tc0.545,0.623,1.332,0.98,2.159,0.98h3.453C19.85,7.878,22.496,10.524,22.5,13.79z M5.25,7.312c0-0.311-0.252-0.563-0.563-0.563\n\t\tS4.124,7.001,4.124,7.312s0.252,0.563,0.563,0.563C4.998,7.874,5.25,7.622,5.25,7.312z M9.375,6.749h-0.75v1.125\n\t\tc0,0.414-0.336,0.75-0.75,0.75c-0.414,0-0.75-0.336-0.75-0.75V5.999h-0.75v1.875c0,0.828,0.672,1.5,1.5,1.5s1.5-0.672,1.5-1.5\n\t\tV6.749z M10.5,10.124H12v-0.75h-1.5V10.124z M13.125,10.874h-1.5v0.75h1.5V10.874z M15,10.124v-0.75h-1.5v0.75H15z M16.125,10.874\n\t\th-1.5v0.75h1.5V10.874z M18,9.374h-1.5v0.75H18V9.374z\"\n            />\n        </SvgIcon>\n    );\n}\n","import React from 'react';\n\nimport { SvgIcon, SvgIconProps } from '@mui/material';\n\nexport default function IconRabbit(props: SvgIconProps) {\n    return (\n        <SvgIcon {...props}>\n            <path\n                d=\"M22.5,14.417c0,1.23,0,2.461,0,3.691c-0.012,0.031-0.031,0.06-0.035,0.092c-0.078,0.682-0.29,1.321-0.643,1.907\n\t\tc-0.899,1.491-2.168,2.331-3.966,2.309c-2.084-0.026-4.169-0.006-6.254-0.006c-0.08,0-0.16,0-0.263,0c0-0.245-0.002-0.469,0-0.692\n\t\tc0.006-0.638,0.432-1.064,1.071-1.067c0.601-0.003,1.203-0.001,1.804-0.002c0.47-0.001,0.707-0.234,0.708-0.704\n\t\tc0.003-0.868-0.006-1.736,0.007-2.604c0.004-0.299,0.025-0.604,0.092-0.894c0.369-1.593,1.728-2.687,3.363-2.728\n\t\tc0.4-0.01,0.672-0.263,0.67-0.622c-0.003-0.359-0.283-0.619-0.68-0.605c-0.272,0.009-0.546,0.035-0.814,0.08\n\t\tc-2.049,0.348-3.719,2.19-3.837,4.261c-0.044,0.777-0.021,1.558-0.029,2.336c-0.001,0.079,0,0.157,0,0.249\n\t\tc-0.435,0-0.838-0.013-1.239,0.005c-0.263,0.012-0.536,0.035-0.785,0.113c-0.927,0.289-1.532,1.114-1.558,2.088\n\t\tc-0.007,0.257-0.001,0.513-0.001,0.774c-0.074,0.005-0.114,0.01-0.154,0.01c-2.447,0-4.894,0.001-7.341-0.002\n\t\tc-0.113,0-0.232-0.024-0.339-0.063C1.89,22.203,1.655,21.802,1.712,21.4c0.058-0.414,0.387-0.739,0.815-0.761\n\t\tc0.423-0.022,0.847-0.011,1.271-0.011c1.169-0.001,2.338,0.001,3.506-0.003c0.403-0.001,0.676-0.258,0.673-0.615\n\t\tc-0.003-0.355-0.281-0.605-0.681-0.612c-0.055-0.001-0.109,0-0.164,0c-1.367,0-2.734-0.002-4.101,0.003\n\t\tc-0.15,0.001-0.258-0.046-0.361-0.148c-0.439-0.435-0.776-0.936-0.964-1.527c-0.084-0.264-0.138-0.538-0.206-0.808\n\t\tc0-0.26,0-0.52,0-0.779c0.014-0.059,0.031-0.118,0.041-0.178c0.216-1.268,0.872-2.223,2.023-2.813\n\t\tc0.783-0.401,1.576-0.784,2.37-1.165c0.168-0.081,0.263-0.188,0.314-0.366c0.062-0.216,0.144-0.427,0.234-0.633\n\t\tC7.59,8.43,9.035,6.083,10.847,3.967c0.713-0.832,1.485-1.605,2.386-2.239c0.227-0.16,0.465-0.201,0.709-0.055\n\t\tc0.25,0.15,0.343,0.386,0.299,0.667c-0.079,0.498-0.147,1-0.262,1.491c-0.432,1.839-1.167,3.562-2.042,5.229\n\t\tc-0.044,0.084-0.087,0.169-0.137,0.265c0.585-0.201,1.133-0.41,1.694-0.577C14.668,8.4,15.857,8.215,17.09,8.42\n\t\tc2.509,0.416,4.613,2.352,5.203,4.831C22.385,13.634,22.432,14.028,22.5,14.417z M5.498,14.745c-0.426-0.002-0.742,0.205-0.8,0.526\n\t\tc-0.064,0.35,0.142,0.681,0.489,0.728c0.365,0.049,0.836-0.089,0.913-0.525C6.169,15.086,5.89,14.747,5.498,14.745z\"\n            />\n            <path\n                d=\"M14.188,7.257c0.274-0.827,0.558-1.686,0.847-2.544c0.017-0.05,0.065-0.11,0.113-0.127\n\t\tc0.542-0.201,1.085-0.401,1.632-0.588c0.258-0.088,0.489-0.009,0.661,0.2c0.173,0.212,0.174,0.446,0.06,0.691\n\t\tc-0.352,0.758-0.813,1.449-1.31,2.118c-0.032,0.043-0.095,0.082-0.147,0.087C15.415,7.154,14.785,7.206,14.188,7.257z\"\n            />\n        </SvgIcon>\n    );\n}\n","import React from 'react';\n\nimport { SvgIcon, SvgIconProps } from '@mui/material';\n\nexport default function IconReptile(props: SvgIconProps) {\n    return (\n        <SvgIcon {...props}>\n            <path\n                d=\"M22.5,15.087c0-0.347-0.281-0.628-0.628-0.628h-0.196l0.086-0.086c0.245-0.245,0.245-0.643,0-0.888s-0.643-0.245-0.888,0\n\t\t\t\tL19.9,14.459h-0.029c-0.744,0-1.447-0.325-1.93-0.891l-0.025-0.029c-0.263,0.335-0.546,0.648-0.848,0.938\n\t\t\t\tc0.718,0.789,1.732,1.239,2.803,1.239H19.9l0.974,0.974c0.123,0.123,0.283,0.184,0.444,0.184s0.321-0.061,0.444-0.184\n\t\t\t\tc0.245-0.245,0.245-0.643,0-0.888l-0.086-0.086h0.196C22.219,15.715,22.5,15.433,22.5,15.087z\"\n            />\n            <path\n                d=\"M13.253,20.405l-0.745-1.159l0.006-0.028c0.177-0.815,0.081-1.655-0.263-2.398c-0.44,0.072-0.895,0.118-1.364,0.139\n\t\t\t\tc0.405,0.579,0.551,1.298,0.4,1.991l-0.006,0.028l-1.159,0.745c-0.292,0.188-0.376,0.576-0.189,0.868\n\t\t\t\tc0.188,0.292,0.576,0.376,0.868,0.189l0.103-0.066l-0.042,0.192c-0.074,0.339,0.141,0.673,0.48,0.747\n\t\t\t\tc0.045,0.01,0.09,0.014,0.134,0.014c0.289,0,0.549-0.201,0.613-0.495l0.042-0.192l0.066,0.103\n\t\t\t\tc0.12,0.187,0.322,0.289,0.529,0.289c0.116,0,0.234-0.032,0.339-0.1C13.356,21.085,13.44,20.696,13.253,20.405z\"\n            />\n            <path\n                d=\"M4.671,9.017H4.642L3.668,8.043c-0.245-0.245-0.643-0.245-0.888,0c-0.245,0.245-0.245,0.643,0,0.888l0.086,0.086H2.67\n\t\t\t\tc-0.347,0-0.628,0.281-0.628,0.628s0.281,0.628,0.628,0.628h0.196L2.78,10.359c-0.245,0.245-0.245,0.643,0,0.888\n\t\t\t\tc0.123,0.123,0.283,0.184,0.444,0.184s0.321-0.061,0.444-0.184l0.974-0.974h0.029c0.38,0,0.75,0.085,1.084,0.244\n\t\t\t\tc0.55-0.152,1.119-0.247,1.698-0.283C6.737,9.459,5.732,9.017,4.671,9.017z\"\n            />\n            <path\n                d=\"M19.805,2.547c-0.762-0.385-1.748-0.248-2.776,0.387c-0.813,0.502-1.56,1.264-1.949,1.989\n\t\t\t\tc-0.742,1.385-0.451,2.605-0.264,3.121c-0.862,2.727-2.828,3.902-5.847,3.495c-1.095-0.148-2.211-0.046-3.227,0.294\n\t\t\t\tc-1.054,0.352-2.004,0.964-2.748,1.77c-1.283,1.388-1.753,3.12-1.359,5.008c0.29,1.39,0.952,2.375,0.98,2.416\n\t\t\t\tc0.119,0.175,0.315,0.275,0.519,0.275c0.05,0,0.101-0.006,0.151-0.018c0.255-0.063,0.444-0.278,0.473-0.539\n\t\t\t\tc0.003-0.029,0.344-2.884,2.102-4.5c0.224-0.206,1.07-0.862,2.563-0.66c2.971,0.401,5.397-0.111,7.208-1.522\n\t\t\t\tc1.306-1.017,2.266-2.475,2.856-4.338c0.986-0.349,1.685-0.923,2.08-1.709C21.265,6.623,21.512,3.41,19.805,2.547z\"\n            />\n            <path\n                d=\"M13.323,5.254c-0.245-0.245-0.643-0.245-0.888,0L12.349,5.34V5.144c0-0.347-0.281-0.628-0.628-0.628\n\t\t\t\ts-0.628,0.281-0.628,0.628V5.34l-0.086-0.086c-0.245-0.245-0.643-0.245-0.888,0s-0.245,0.643,0,0.888l0.974,0.974v0.029\n\t\t\t\tc0,1.004,0.396,1.959,1.096,2.666c0.339-0.228,0.627-0.529,0.87-0.907c-0.453-0.47-0.71-1.098-0.71-1.758V7.117\n\t\t\t\tc0,0,0.87-0.87,0.974-0.974C13.427,6.038,13.697,5.628,13.323,5.254z\"\n            />\n        </SvgIcon>\n    );\n}\n","import React from 'react';\n\nimport { Pets } from '@mui/icons-material';\nimport { Avatar } from '@mui/material';\nimport getSpecieType, { SpeciesType } from '../../graphql/data-transform/species';\nimport { AnimalDetails, Maybe, Species } from '../../graphql/types';\nimport IconBird from './IconBird';\nimport IconCat from './IconCat';\nimport IconDog from './IconDog';\nimport IconGuineapig from './IconGuineapig';\nimport IconRabbit from './IconRabbit';\nimport IconReptile from './IconReptile';\n\ntype AnimalAvatarProps = Pick<AnimalDetails, 'species' | 'gender'>;\n\nconst PREFIX = 'AnimalAvatar';\nconst classes = {\n    dynamicAvatar: `${PREFIX}-dynamicAvatar`,\n};\n\nexport default function AnimalAvatar({ species }: AnimalAvatarProps) {\n    // const styleProps = createGenderStyle(gender);\n    // const classes = useStyles(styleProps);\n\n    return (\n        <Avatar className={classes.dynamicAvatar} aria-label=\"species and gender icon\">\n            {AnimalSpeciesIcon(species)}\n        </Avatar>\n    );\n}\n//\n// interface AvatarStyleProps {\n//     color: string;\n//     backgroundColor: string;\n// }\n\n// const useStyles = makeStyles({\n//     dynamicAvatar: (props: AvatarStyleProps) => ({\n//         color: props.color,\n//         backgroundColor: props.backgroundColor,\n//     }),\n// });\n\n// const createGenderStyle = (gender?: Maybe<Gender>): AvatarStyleProps => {\n//     const styleMale = {\n//         color: '#3949ab',\n//         backgroundColor: '#c5cae9',\n//     };\n//     const styleDesexedMale = {\n//         color: 'white',\n//         backgroundColor: '#c5cae9',\n//     };\n//     const styleFemale = {\n//         color: '#d81b60',\n//         backgroundColor: '#f8bbd0',\n//     };\n//     const styleDesexedFemale = {\n//         color: 'white',\n//         backgroundColor: '#f8bbd0',\n//     };\n//     const styleUndefined = {\n//         color: '#999999',\n//         backgroundColor: '#e0e0e0',\n//     };\n//\n//     switch (getGenderType(gender)) {\n//         case GenderType.MALE:\n//             return styleMale;\n//         case GenderType.DESEXEDMALE:\n//             return styleDesexedMale;\n//         case GenderType.FEMALE:\n//             return styleFemale;\n//         case GenderType.DESEXEDFEMALE:\n//             return styleDesexedFemale;\n//         default:\n//             return styleUndefined;\n//     }\n// };\n\nconst AnimalSpeciesIcon = (species?: Maybe<Species>) => {\n    // available GraphQL enums\n    //   {\n    //     species(language:\"lt\") {\n    //       id,\n    //       value\n    //     }\n    //   }\n    switch (getSpecieType(species)) {\n        case SpeciesType.DOG:\n            return <IconDog />;\n        case SpeciesType.CAT:\n            return <IconCat />;\n        case SpeciesType.RABBIT:\n            return <IconRabbit />;\n        case SpeciesType.BIRD:\n            return <IconBird />;\n        case SpeciesType.GUINEAPIG:\n            return <IconGuineapig />;\n        case SpeciesType.REPTILE:\n            return <IconReptile />;\n        default:\n            return <Pets />;\n    }\n};\n","import clsx from 'clsx';\nimport React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport {\n    Box,\n    Card,\n    CardActionArea,\n    CardHeader,\n    CardMedia,\n    Grid,\n    GridSize,\n    IconButton,\n    styled,\n    Typography,\n} from '@mui/material';\nimport { Animal } from '../../graphql/types';\nimport { useAppDispatch } from '../../store';\nimport { toggleFavorite } from '../../store/animals';\nimport { getYMDDateFromTS } from '../../utils/dateFormatters';\nimport AnimalAvatar from '../icons/AnimalAvatar';\n\ninterface AnimalCardProps {\n    animal: Animal;\n    xs?: GridSize;\n    md?: GridSize;\n    lg?: GridSize;\n}\n\nconst PREFIX = 'AnimalCard';\nconst classes = {\n    cardMediaWrapper: `${PREFIX}-cardMediaWrapper`,\n    media: `${PREFIX}-media`,\n    favoriteButton: `${PREFIX}-favoriteButton`,\n    isFavorite: `${PREFIX}-isFavorite`,\n    headerText: `${PREFIX}-headerText`,\n    subHeaderText: `${PREFIX}-subHeaderText`,\n};\n\nconst isFavoriteColor = '#D10C0C';\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n    [`& .${classes.cardMediaWrapper}`]: {\n        position: 'relative',\n    },\n    [`& .${classes.media}`]: {\n        zIndex: 0,\n    },\n    [`& .${classes.favoriteButton}`]: {\n        position: 'absolute',\n        top: theme.spacing(2),\n        right: theme.spacing(2),\n        zIndex: 1,\n        backgroundColor: 'rgba(255, 255, 255, .3)',\n        '&:hover': {\n            backgroundColor: 'rgba(255, 255, 255, .6)',\n        },\n        '&:focus': {\n            backgroundColor: 'rgba(255, 255, 255, .6)',\n        },\n    },\n    [`& .${classes.isFavorite}`]: {\n        color: isFavoriteColor,\n        backgroundColor: 'rgba(255, 255, 255, .75)',\n    },\n    [`& .${classes.headerText}`]: {\n        maxWidth: 150,\n        fontSize: 20,\n        lineHeight: '24px',\n        fontWeight: 600,\n    },\n    [`& .${classes.subHeaderText}`]: {\n        maxWidth: 150,\n        color: theme.palette.grey['600'],\n    },\n}));\n\nfunction AnimalCard({ animal, xs = 10, md = 6, lg = 3 }: AnimalCardProps) {\n    const dispatch = useAppDispatch();\n    const [isFavorite, setFavorite] = useState<boolean>(!!animal.isFavorite);\n\n    const handleToggleFavorite = () => {\n        dispatch(toggleFavorite({ id: animal.id, favorite: !isFavorite }));\n        setFavorite(!isFavorite);\n    };\n\n    let formatedRegistrationDate;\n    if (animal.registration?.registrationDate) {\n        formatedRegistrationDate = getYMDDateFromTS(animal.registration?.registrationDate);\n    } else {\n        formatedRegistrationDate = 'n/d';\n    }\n\n    const species = animal.details?.species;\n    const gender = animal.details?.gender;\n\n    // todo - should handle error state via UI \"toast\" elements\n\n    return (\n        <Grid item xs={xs} md={md} lg={lg}>\n            <StyledCard>\n                <Box className={classes.cardMediaWrapper}>\n                    <CardActionArea component={NavLink} to={`/animal/${animal.id}`}>\n                        <CardMedia\n                            component=\"img\"\n                            className={classes.media}\n                            image={animal.imageUrl || `https://eu.ui-avatars.com/api/?name=${animal.name}`}\n                            title=\"Animal picture\"\n                        />\n                    </CardActionArea>\n                    <IconButton\n                        className={clsx(classes.favoriteButton, {\n                            [classes.isFavorite]: isFavorite,\n                        })}\n                        onClick={handleToggleFavorite}\n                        aria-label=\"add/remove favorite\"\n                    >\n                        <FavoriteIcon />\n                    </IconButton>\n                </Box>\n                <CardHeader\n                    avatar={<AnimalAvatar species={species} gender={gender} />}\n                    title={\n                        <Typography component=\"h6\" className={classes.headerText} noWrap>\n                            {animal.name}\n                        </Typography>\n                    }\n                    subheader={\n                        <Typography className={classes.subHeaderText} noWrap>\n                            {formatedRegistrationDate}\n                        </Typography>\n                    }\n                />\n            </StyledCard>\n        </Grid>\n    );\n}\n\nexport default React.memo(AnimalCard);\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { alpha, Avatar, styled, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { Animal } from '../../graphql/types';\nimport { getAnimalAge } from '../../utils/animal';\n\ninterface AnimalsTableProps {\n    animals: Animal[];\n}\n\nconst PREFIX = 'AnimalsTable';\n\nconst classes = {\n    headRow: `${PREFIX}-headRow`,\n    head: `${PREFIX}-head`,\n    row: `${PREFIX}-row`,\n};\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n    width: '100%',\n    backgroundColor: alpha(theme.palette.background.paper, 0.4),\n\n    [classes.headRow]: {\n        backgroundColor: alpha(theme.palette.primary.dark, 0.75),\n    },\n    [classes.head]: {\n        color: theme.palette.text.secondary,\n    },\n    [classes.row]: {\n        cursor: 'pointer',\n        textDecoration: 'none',\n    },\n}));\n\nexport default function AnimalsTable({ animals }: AnimalsTableProps) {\n    const navigate = useNavigate();\n\n    const onRowClick = (animalId?: number) => {\n        navigate(`/animal/${animalId}`);\n    };\n\n    return (\n        <TableContainer>\n            <StyledTable size=\"small\" aria-label=\"animals\">\n                <TableHead>\n                    <TableRow className={classes.headRow}>\n                        <TableCell align=\"center\" className={classes.head} />\n                        <TableCell align=\"center\" className={classes.head}>\n                            Specie\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Name\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Breed\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Weight, kg\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Age\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.head}>\n                            Checked in\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {animals.map(animal => (\n                        <TableRow key={animal?.id} hover onClick={() => onRowClick(animal?.id)} className={classes.row}>\n                            <TableCell align=\"center\">\n                                <Avatar\n                                    alt=\"Animal picture\"\n                                    src={\n                                        animal?.imageUrl\n                                            ? animal?.imageUrl\n                                            : `https://eu.ui-avatars.com/api/?name=${animal?.name}`\n                                    }\n                                />\n                            </TableCell>\n                            <TableCell align=\"center\">Dog</TableCell>\n                            <TableCell align=\"center\">{animal?.name}</TableCell>\n                            <TableCell align=\"center\">Puddle</TableCell>\n                            <TableCell align=\"center\">{animal?.details?.weight}</TableCell>\n                            <TableCell align=\"center\">{getAnimalAge(animal?.details?.birthDate)}</TableCell>\n                            <TableCell align=\"center\">check-in date</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </StyledTable>\n        </TableContainer>\n    );\n}\n","import React from 'react';\n\nimport { Grid, styled, TablePagination } from '@mui/material';\n\ninterface PaginationRoundedProps {\n    count: number;\n    page: number;\n    onPageChange: (page: number) => void;\n    pageSize: number;\n    onPageSizeChange: (pageSize: number) => void;\n}\n\nconst PREFIX = 'PaginationRounded';\nconst classes = {\n    toolbar: `${PREFIX}-toolbar`,\n    actions: `${PREFIX}-actions`,\n};\n\nconst Root = styled('div')(({ theme }) => ({\n    marginTop: theme.spacing(2),\n    [classes.toolbar]: {\n        flexWrap: 'wrap',\n    },\n    [classes.actions]: {\n        [theme.breakpoints.down('sm')]: {\n            margin: '0 auto',\n        },\n    },\n}));\n\nexport default function PaginationRounded({\n    count,\n    page,\n    onPageChange,\n    pageSize,\n    onPageSizeChange,\n}: PaginationRoundedProps) {\n    function handlePageChange(event, newPage) {\n        onPageChange(newPage);\n    }\n\n    function handleChangeRowsPerPage(event) {\n        const size = parseInt(event.target.value, 10);\n        onPageSizeChange(size);\n    }\n\n    return (\n        <Grid container justifyContent=\"flex-end\">\n            <Root>\n                <TablePagination\n                    component=\"div\"\n                    count={count}\n                    page={page}\n                    onPageChange={handlePageChange}\n                    rowsPerPage={pageSize}\n                    rowsPerPageOptions={[4, 12, 48, 192]}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                    classes={{\n                        toolbar: classes.toolbar,\n                        actions: classes.actions,\n                    }}\n                    labelRowsPerPage=\"Items per page\"\n                />\n            </Root>\n        </Grid>\n    );\n}\n","import React from 'react';\n\nimport { Grid, Skeleton } from '@mui/material';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { loadNextPage, loadPreviousPage, setPageSize } from '../../store/queryArgs';\nimport AnimalCard from './AnimalCard';\nimport AnimalsTable from './AnimalsTable';\nimport PaginationRounded from './PaginationRounded';\nimport { AnimalsViewType } from './ViewSelector';\n\nexport default function AnimalsListContainer({ viewType }: AnimalsListContainerProps) {\n    const dispatch = useAppDispatch();\n\n    const { loading, entities, pageInfo } = useAppSelector(state => state.animals);\n    const { currentPage, pageSize } = useAppSelector(state => state.queryArgs);\n\n    // const animalObjs: Animal[] = animalsConnection.edges;\n    const totalPageSize = pageInfo?.totalCount || 0;\n\n    if (loading === 'pending') {\n        return <Skeleton animation=\"wave\" variant=\"rectangular\" height={500} width=\"100%\" />;\n    }\n\n    if (totalPageSize === 0) {\n        // TODO: replace with proper UI elements\n        return <p>No data</p>;\n    }\n\n    function handlePageSizeChange(size) {\n        dispatch(setPageSize(size));\n    }\n\n    function handlePageChange(newPage) {\n        if (newPage > currentPage) {\n            dispatch(loadNextPage(pageInfo));\n        } else {\n            dispatch(loadPreviousPage(pageInfo));\n        }\n    }\n\n    return (\n        <>\n            {viewType === AnimalsViewType.TABLE ? (\n                <AnimalsTable animals={entities} />\n            ) : (\n                <Grid container component=\"ul\" spacing={2} justifyContent=\"center\">\n                    {entities.map(animal => (\n                        <AnimalCard key={animal.id} animal={animal} />\n                    ))}\n                </Grid>\n            )}\n            <PaginationRounded\n                count={totalPageSize}\n                page={currentPage}\n                onPageChange={handlePageChange}\n                pageSize={pageSize}\n                onPageSizeChange={handlePageSizeChange}\n            />\n        </>\n    );\n}\n\ninterface AnimalsListContainerProps {\n    viewType: AnimalsViewType;\n}\n","import { loader } from 'graphql.macro';\nimport React, { useEffect } from 'react';\nimport { useFormContext, useWatch } from 'react-hook-form';\n\nimport { Box } from '@mui/material';\nimport { Species } from '../../../graphql/types';\nimport usePrevious from '../../../hooks/usePrevious';\nimport DynamicSelector from '../../form/DynamicSelector';\n\nconst GET_SPECIES = loader('../../../graphql/queries/species.graphql');\nconst GET_GENDERS = loader('../../../graphql/queries/genders.graphql');\nconst GET_BREEDS = loader('../../../graphql/queries/breeds.graphql');\n\nexport default function AnimalFiltersDialogContents() {\n    const { control, setValue } = useFormContext();\n\n    const species = useWatch({\n        control,\n        name: 'species',\n        defaultValue: null,\n    });\n\n    const prevSpecies = usePrevious({ species });\n\n    useEffect(() => {\n        const speciesHasChangedInUi =\n            prevSpecies !== undefined && prevSpecies.species !== null && prevSpecies.species !== species;\n        if (!species || speciesHasChangedInUi) {\n            setValue('breed', null);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [species, setValue]);\n\n    // NOTE:\n    // if Species input will be multiple, it will compromise Breeds!\n    // Breeds cannot be selected of multiple species in the moment.\n    // The Solution - let single selections only.\n\n    return (\n        <>\n            <Box marginTop={2.5} marginBottom={2.5}>\n                <DynamicSelector\n                    name=\"species\"\n                    label=\"Species\"\n                    gqlOptions={{ query: GET_SPECIES, variables: { language: 'lt' }, type: 'species' }}\n                />\n            </Box>\n            <Box marginTop={2.5} marginBottom={2.5}>\n                <DynamicSelector\n                    name=\"breed\"\n                    label=\"Breed\"\n                    disabled={!species}\n                    gqlOptions={{\n                        query: GET_BREEDS,\n                        variables: { species: ((species as Species)?.id || '').toString(), language: 'lt' },\n                        type: 'breeds',\n                    }}\n                />\n            </Box>\n            <Box marginTop={2.5} marginBottom={2.5}>\n                <DynamicSelector\n                    name=\"gender\"\n                    label=\"Gender\"\n                    gqlOptions={{ query: GET_GENDERS, variables: { language: 'lt' }, type: 'genders' }}\n                />\n            </Box>\n        </>\n    );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\n\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    IconButton,\n    useMediaQuery,\n    useTheme,\n} from '@mui/material';\nimport { useAppDispatch, useAppSelector } from '../../../store';\nimport { setFilters } from '../../../store/filters';\nimport AnimalFiltersDialogContents from './AnimalFiltersDialogContents';\n\nexport default function AnimalFiltersDialog() {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const dispatch = useAppDispatch();\n\n    const filters = useAppSelector(state => state.filters);\n    const { totalCount } = useAppSelector(state => state.animals.pageInfo || {});\n\n    const methods = useForm({ defaultValues: filters });\n    const { handleSubmit, reset } = methods;\n    const formRef = useRef<HTMLFormElement>(null);\n\n    useEffect(() => {\n        reset(filters);\n    }, [filters, reset]);\n\n    const handleDialogOpen = () => {\n        setDialogOpen(true);\n    };\n\n    const handleDialogClose = () => {\n        setDialogOpen(false);\n    };\n\n    const onResetFilters = () => {\n        reset({});\n        // dispatch(setAnimalsFiltersWithFilterObjs({}));\n    };\n\n    const onSubmit = formData => {\n        handleDialogClose();\n        dispatch(setFilters(formData));\n    };\n\n    return (\n        <Grid container alignItems=\"center\" spacing={1}>\n            <Grid item>{totalCount}</Grid>\n            <Grid item>\n                <IconButton aria-label=\"filter animal list\" aria-haspopup=\"true\" onClick={handleDialogOpen}>\n                    <FilterListIcon />\n                </IconButton>\n            </Grid>\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={dialogOpen}\n                fullScreen={fullScreen}\n                onClose={handleDialogClose}\n                aria-labelledby=\"filter-dialog-title\"\n            >\n                <FormProvider {...methods}>\n                    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" marginRight={2.6}>\n                        <DialogTitle id=\"filter-dialog-title\">Search Filters</DialogTitle>\n                        <Button onClick={onResetFilters}>RESET ALL</Button>\n                    </Box>\n                    <DialogContent>\n                        <Grid component=\"form\" ref={formRef}>\n                            <AnimalFiltersDialogContents />\n                        </Grid>\n                    </DialogContent>\n                    <Box marginBottom={2} marginRight={2}>\n                        <DialogActions>\n                            <Button variant=\"outlined\" onClick={handleDialogClose}>\n                                Cancel\n                            </Button>\n                            <Button variant=\"contained\" onClick={handleSubmit(onSubmit)} color=\"secondary\" autoFocus>\n                                Apply\n                            </Button>\n                        </DialogActions>\n                    </Box>\n                </FormProvider>\n            </Dialog>\n        </Grid>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useMatch } from 'react-router-dom';\n\nimport { Grid, useMediaQuery, useTheme } from '@mui/material';\nimport AnimalsListContainer from '../components/animal/AnimalsListContainer';\nimport AnimalFiltersChips from '../components/animal/filters/AnimalFilterChips';\nimport AnimalFiltersDialog from '../components/animal/filters/AnimalFiltersDialog';\nimport ViewSelector, { AnimalsViewType } from '../components/animal/ViewSelector';\nimport { useAppDispatch, useAppSelector } from '../store';\nimport { fetchAnimals } from '../store/animals';\nimport { resetQuery } from '../store/queryArgs';\nimport Page from './Page';\n\nfunction FavoritesPage() {\n    const theme = useTheme();\n    const dispatch = useAppDispatch();\n\n    // TODO: extract selectedViewType to context or localStore\n    const [viewType, setViewType] = useState<AnimalsViewType>(AnimalsViewType.LIST);\n    const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const match = useMatch('/favorites');\n    const location = useLocation();\n\n    const { query: queryArgs } = useAppSelector(state => state.queryArgs);\n    const { favoriteChangeRequestId } = useAppSelector(state => state.animals);\n\n    useEffect(() => {\n        if (mobile && viewType === AnimalsViewType.TABLE) {\n            setViewType(AnimalsViewType.LIST);\n        }\n    }, [mobile, viewType]);\n\n    const handleViewChange = () => {\n        setViewType(viewType === AnimalsViewType.TABLE ? AnimalsViewType.LIST : AnimalsViewType.TABLE);\n    };\n\n    useEffect(() => {\n        dispatch(resetQuery());\n    }, [dispatch, location.pathname]);\n\n    useEffect(() => {\n        if (match) {\n            dispatch(fetchAnimals({ isFavoriteOnly: true }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dispatch, queryArgs, favoriteChangeRequestId]);\n\n    return (\n        <Page\n            title=\"Favorites\"\n            topSection={<TopSection viewType={viewType} onChange={handleViewChange} mobile={mobile} />}\n        >\n            <AnimalsListContainer viewType={viewType} />\n        </Page>\n    );\n}\n\nfunction TopSection({ viewType, onChange, mobile }: TopSectionProps) {\n    return (\n        <Grid container spacing={2} alignItems=\"center\">\n            <Grid container item xs={10} alignItems=\"center\" spacing={2}>\n                <Grid item>\n                    <AnimalFiltersDialog />\n                </Grid>\n                <Grid item>\n                    <AnimalFiltersChips />\n                </Grid>\n            </Grid>\n            {!mobile && (\n                <Grid item xs={2} style={{ textAlign: 'right' }}>\n                    <ViewSelector value={viewType} onChange={onChange} />\n                </Grid>\n            )}\n        </Grid>\n    );\n}\n\nexport default FavoritesPage;\n\ninterface TopSectionProps {\n    viewType: AnimalsViewType;\n    onChange: () => void;\n    mobile: boolean;\n}\n"],"sourceRoot":""}