{"version":3,"sources":["../../../../src/react/parser/index.ts","../../../../src/react/data/OperationData.ts","../node_modules/@material-ui/core/esm/TextField/TextField.js","../node_modules/@material-ui/core/esm/FormControl/FormControl.js","../../../../src/react/data/QueryData.ts","../../../../../src/react/hooks/utils/useBaseQuery.ts","../../../../../src/react/hooks/utils/useDeepMemo.ts","../../../../../src/react/hooks/utils/useAfterFastRefresh.ts","../../../../src/react/hooks/useQuery.ts","../node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/esm/Chip/Chip.js","../node_modules/@material-ui/core/esm/FormLabel/FormLabel.js","../node_modules/@material-ui/core/esm/InputLabel/InputLabel.js","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js"],"names":["DocumentType","cache","Map","operationName","type","name","Query","Mutation","Subscription","parser","document","variables","cached","get","fragments","definitions","filter","x","kind","queries","operation","mutations","subscriptions","length","definition","options","context","isMounted","previousOptions","this","getOptions","setOptions","newOptions","storePrevious","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","requiredOperationName","usedOperationName","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","TextField","React","props","ref","autoComplete","_props$autoFocus","autoFocus","children","classes","className","_props$color","color","defaultValue","_props$disabled","disabled","_props$error","error","FormHelperTextProps","_props$fullWidth","fullWidth","helperText","hiddenLabel","id","InputLabelProps","inputProps","InputProps","inputRef","label","_props$multiline","multiline","onBlur","onChange","onFocus","placeholder","_props$required","required","rows","rowsMax","maxRows","minRows","_props$select","select","SelectProps","value","_props$variant","variant","other","_objectWithoutProperties","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","native","undefined","helperTextId","concat","inputLabelId","InputComponent","InputElement","_extends","FormControl","clsx","root","InputLabel","htmlFor","Select","labelId","input","FormHelperText","withStyles","_props$component","component","Component","visuallyFocused","focused","_props$hiddenLabel","_props$margin","margin","size","_React$useState","initialAdornedStart","forEach","child","isMuiElement","isAdornedStart","adornedStart","setAdornedStart","_React$useState2","initialFilled","isFilled","setFilled","_React$useState3","_focused","setFocused","onFilled","childContext","onEmpty","registerEffect","FormControlContext","Provider","capitalize","display","flexDirection","position","minWidth","padding","border","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","width","onNewData","runLazy","previous","Object","create","runLazyQuery","lazyOptions","obsRefetch","currentObservable","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","query","removeQuerySubscription","removeObservable","updateObservableQuery","getExecuteSsrResult","getExecuteResult","executeLazy","loading","networkStatus","ready","called","data","fetchData","ssr","Promise","resolve","startQuerySubscription","afterExecute","lazy","ssrInitiated","handleErrorOrCompleted","bind","result","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","stale","observableQueryFields","addQueryPromise","prepareObservableQueryOptions","displayName","fetchPolicy","initializeObservableQuery","getSSRObservable","observableQueryOptions","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","currentSubscription","subscribe","next","previousResult","resubscribeToQuery","hasOwnProperty","last","resetLastResults","currentResult","getCurrentResult","partial","errors","graphQLErrors","assign","getLastResult","keys","previousData","resetQueryStoreErrors","onCompleted","onError","unsubscribe","andDelete","useBaseQuery","tick","forceUpdate","updatedOptions","queryDataRef","queryData","current","then","memoFn","key","useDeepMemo","queryResult","__DEV__","effectFn","useAfterFastRefresh","useQuery","createSvgIcon","d","isDeleteKeyboardEvent","keyboardEvent","Chip","avatarProp","avatar","clickableProp","clickable","ComponentProp","deleteIconProp","deleteIcon","iconProp","icon","onClick","onDelete","onKeyDown","onKeyUp","_props$size","chipRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","small","ButtonBase","moreProps","customClasses","deleteIconSmall","CancelIcon","avatarSmall","iconSmall","role","outlinedPrimary","outlinedSecondary","sizeSmall","deletable","tabIndex","currentTarget","target","preventDefault","blur","labelSmall","theme","backgroundColor","palette","grey","deleteIconColor","alpha","text","primary","fontFamily","typography","fontSize","pxToRem","alignItems","justifyContent","height","getContrastText","borderRadius","whiteSpace","transition","transitions","cursor","outline","textDecoration","boxSizing","opacity","pointerEvents","marginLeft","marginRight","contrastText","dark","secondary","colorPrimary","main","colorSecondary","userSelect","WebkitTapHighlightColor","emphasize","boxShadow","shadows","clickableColorPrimary","clickableColorSecondary","deletableColorPrimary","deletableColorSecondary","action","hoverOpacity","avatarColorPrimary","avatarColorSecondary","iconColorPrimary","iconColorSecondary","overflow","textOverflow","paddingLeft","paddingRight","deleteIconColorPrimary","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary","FormLabel","muiFormControl","useFormControl","fcs","formControlState","states","asterisk","body1","lineHeight","_props$disableAnimati","disableAnimation","shrinkProp","formControl","animated","transformOrigin","left","top","transform","duration","shorter","easing","easeOut","zIndex","contained","dangerouslySetInnerHTML","__html","caption","textAlign"],"mappings":"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","file":"static/js/4.9247c185.chunk.js","sourcesContent":["import { invariant } from '../../utilities/globals';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  VariableDefinitionNode,\n  OperationDefinitionNode\n} from 'graphql';\n\nexport enum DocumentType {\n  Query,\n  Mutation,\n  Subscription\n}\n\nexport interface IDocumentDefinition {\n  type: DocumentType;\n  name: string;\n  variables: ReadonlyArray<VariableDefinitionNode>;\n}\n\nconst cache = new Map();\n\nexport function operationName(type: DocumentType) {\n  let name;\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n  return name;\n}\n\n// This parser is mostly used to safety check incoming documents.\nexport function parser(document: DocumentNode): IDocumentDefinition {\n  const cached = cache.get(document);\n  if (cached) return cached;\n\n  let variables, type, name;\n\n  invariant(\n    !!document && !!document.kind,\n    `Argument of ${document} passed to parser was not a valid GraphQL ` +\n      `DocumentNode. You may need to use 'graphql-tag' or another method ` +\n      `to convert your operation into a document`\n  );\n\n  const fragments = document.definitions.filter(\n    (x: DefinitionNode) => x.kind === 'FragmentDefinition'\n  );\n\n  const queries = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'query'\n  );\n\n  const mutations = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'mutation'\n  );\n\n  const subscriptions = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'subscription'\n  );\n\n  invariant(\n    !fragments.length ||\n      (queries.length || mutations.length || subscriptions.length),\n    `Passing only a fragment to 'graphql' is not yet supported. ` +\n      `You must include a query, subscription or mutation as well`\n  );\n\n  invariant(\n    queries.length + mutations.length + subscriptions.length <= 1,\n    `react-apollo only supports a query, subscription, or a mutation per HOC. ` +\n      `${document} had ${queries.length} queries, ${subscriptions.length} ` +\n      `subscriptions and ${mutations.length} mutations. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n\n  const definitions = queries.length\n    ? queries\n    : mutations.length\n    ? mutations\n    : subscriptions;\n\n  invariant(\n    definitions.length === 1,\n    `react-apollo only supports one definition per HOC. ${document} had ` +\n      `${definitions.length} definitions. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  const definition = definitions[0] as OperationDefinitionNode;\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data'; // fallback to using data if no name\n  }\n\n  const payload = { name, type, variables };\n  cache.set(document, payload);\n  return payload;\n}\n","import { invariant } from '../../utilities/globals';\n\nimport { DocumentNode } from 'graphql';\nimport { equal } from '@wry/equality';\n\nimport { ApolloClient } from '../../core';\nimport { DocumentType, parser, operationName } from '../parser';\nimport { CommonOptions } from '../types/types';\n\nexport abstract class OperationData<TOptions = any> {\n  public isMounted: boolean = false;\n  public previousOptions: CommonOptions<TOptions> = {} as CommonOptions<\n    TOptions\n  >;\n  public context: any = {};\n  public client: ApolloClient<object>;\n\n  private options: CommonOptions<TOptions> = {} as CommonOptions<TOptions>;\n\n  constructor(options?: CommonOptions<TOptions>, context?: any) {\n    this.options = options || ({} as CommonOptions<TOptions>);\n    this.context = context || {};\n  }\n\n  public getOptions(): CommonOptions<TOptions> {\n    return this.options;\n  }\n\n  public setOptions(\n    newOptions: CommonOptions<TOptions>,\n    storePrevious: boolean = false\n  ) {\n    if (storePrevious && !equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n    this.options = newOptions;\n  }\n\n  public abstract execute(...args: any): any;\n  public abstract afterExecute(...args: any): void | (() => void);\n  public abstract cleanup(): void;\n\n  protected unmount() {\n    this.isMounted = false;\n  }\n\n  protected refreshClient() {\n    const client =\n      (this.options && this.options.client) ||\n      (this.context && this.context.client);\n\n    invariant(\n      !!client,\n      'Could not find \"client\" in the context or passed in as an option. ' +\n        'Wrap the root component in an <ApolloProvider>, or pass an ' +\n        'ApolloClient instance in via options.'\n    );\n\n    let isNew = false;\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n    return {\n      client: this.client as ApolloClient<object>,\n      isNew\n    };\n  }\n\n  protected verifyDocumentType(document: DocumentNode, type: DocumentType) {\n    const operation = parser(document);\n    const requiredOperationName = operationName(type);\n    const usedOperationName = operationName(operation.type);\n    invariant(\n      operation.type === type,\n      `Running a ${requiredOperationName} requires a graphql ` +\n        `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n    );\n  }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      maxRows = props.maxRows,\n      minRows = props.minRows,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"maxRows\", \"minRows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   * @deprecated Use `minRows` instead.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display.\n   * @deprecated Use `maxRows` instead.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = /*#__PURE__*/React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      visuallyFocused = props.focused,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      size = props.size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"focused\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0],\n      setAdornedStart = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var focused = visuallyFocused !== undefined ? visuallyFocused : _focused;\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: There are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will be displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","import { equal } from '@wry/equality';\n\nimport { ApolloError } from '../../errors';\n\nimport {\n  ApolloClient,\n  NetworkStatus,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n  ObservableQuery,\n  FetchMoreOptions,\n  UpdateQueryOptions,\n  DocumentNode,\n  TypedDocumentNode,\n} from '../../core';\n\nimport {\n  ObservableSubscription\n} from '../../utilities';\n\nimport { DocumentType } from '../parser';\nimport {\n  QueryResult,\n  QueryDataOptions,\n  QueryTuple,\n  QueryLazyOptions,\n  ObservableQueryFields,\n} from '../types/types';\nimport { OperationData } from './OperationData';\n\ntype ObservableQueryOptions<TData, TVars> =\n  ReturnType<QueryData<TData, TVars>[\"prepareObservableQueryOptions\"]>;\n\nexport class QueryData<TData, TVariables> extends OperationData<\n  QueryDataOptions<TData, TVariables>\n> {\n  public onNewData: () => void;\n  public currentObservable?: ObservableQuery<TData, TVariables>;\n  private currentSubscription?: ObservableSubscription;\n  private runLazy: boolean = false;\n  private lazyOptions?: QueryLazyOptions<TVariables>;\n  private previous: {\n    client?: ApolloClient<object>;\n    query?: DocumentNode | TypedDocumentNode<TData, TVariables>;\n    observableQueryOptions?: ObservableQueryOptions<TData, TVariables>;\n    result?: QueryResult<TData, TVariables>;\n    loading?: boolean;\n    options?: QueryDataOptions<TData, TVariables>;\n    error?: ApolloError;\n  } = Object.create(null);\n\n  constructor({\n    options,\n    context,\n    onNewData\n  }: {\n    options: QueryDataOptions<TData, TVariables>;\n    context: any;\n    onNewData: () => void;\n  }) {\n    super(options, context);\n    this.onNewData = onNewData;\n  }\n\n  public execute(): QueryResult<TData, TVariables> {\n    this.refreshClient();\n\n    const { skip, query } = this.getOptions();\n    if (skip || query !== this.previous.query) {\n      this.removeQuerySubscription();\n      this.removeObservable(!skip);\n      this.previous.query = query;\n    }\n\n    this.updateObservableQuery();\n\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  }\n\n  public executeLazy(): QueryTuple<TData, TVariables> {\n    return !this.runLazy\n      ? [\n          this.runLazyQuery,\n          {\n            loading: false,\n            networkStatus: NetworkStatus.ready,\n            called: false,\n            data: undefined\n          }\n        ]\n      : [this.runLazyQuery, this.execute()];\n  }\n\n  // For server-side rendering\n  public fetchData(): Promise<void> | boolean {\n    const options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n    return new Promise(resolve => this.startQuerySubscription(resolve));\n  }\n\n  public afterExecute({ lazy = false }: { lazy?: boolean } = {}) {\n    this.isMounted = true;\n    const options = this.getOptions();\n    if (this.currentObservable && !this.ssrInitiated()) {\n      this.startQuerySubscription();\n    }\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n    }\n\n    this.previousOptions = options;\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    this.removeQuerySubscription();\n    this.removeObservable(true);\n    delete this.previous.result;\n  }\n\n  public getOptions() {\n    const options = super.getOptions();\n\n    if (this.lazyOptions) {\n      options.variables = {\n        ...options.variables,\n        ...this.lazyOptions.variables\n      } as TVariables;\n      options.context = {\n        ...options.context,\n        ...this.lazyOptions.context\n      };\n    }\n\n    // skip is not supported when using lazy query execution.\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  }\n\n  public ssrInitiated() {\n    return this.context && this.context.renderPromises;\n  }\n\n  private runLazyQuery = (options?: QueryLazyOptions<TVariables>) => {\n    this.cleanup();\n    this.runLazy = true;\n    this.lazyOptions = options;\n    this.onNewData();\n  };\n\n  private getExecuteSsrResult() {\n    const { ssr, skip } = this.getOptions();\n    const ssrDisabled = ssr === false;\n    const fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n\n    const ssrLoading = {\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined,\n      stale: false,\n      client: this.client,\n      ...this.observableQueryFields(),\n    } as QueryResult<TData, TVariables>;\n\n    // If SSR has been explicitly disabled, and this function has been called\n    // on the server side, return the default loading state.\n    if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n      this.previous.result = ssrLoading;\n      return ssrLoading;\n    }\n\n    if (this.ssrInitiated()) {\n      const result = this.getExecuteResult() || ssrLoading;\n      if (result.loading && !skip) {\n        this.context.renderPromises!.addQueryPromise(this, () => null);\n      }\n      return result;\n    }\n  }\n\n  private prepareObservableQueryOptions() {\n    const options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    const displayName = options.displayName || 'Query';\n\n    // Set the fetchPolicy to cache-first for network-only and cache-and-network\n    // fetches for server side renders.\n    if (\n      this.ssrInitiated() &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return {\n      ...options,\n      displayName,\n      context: options.context,\n    };\n  }\n\n  private initializeObservableQuery() {\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    if (this.ssrInitiated()) {\n      this.currentObservable = this.context!.renderPromises!.getSSRObservable(\n        this.getOptions()\n      );\n    }\n\n    if (!this.currentObservable) {\n      const observableQueryOptions = this.prepareObservableQueryOptions();\n\n      this.previous.observableQueryOptions = {\n        ...observableQueryOptions,\n        children: void 0,\n      };\n      this.currentObservable = this.refreshClient().client.watchQuery({\n        ...observableQueryOptions\n      });\n\n      if (this.ssrInitiated()) {\n        this.context!.renderPromises!.registerSSRObservable(\n          this.currentObservable,\n          observableQueryOptions\n        );\n      }\n    }\n  }\n\n  private updateObservableQuery() {\n    // If we skipped initially, we may not have yet created the observable\n    if (!this.currentObservable) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    const newObservableQueryOptions = {\n      ...this.prepareObservableQueryOptions(),\n      children: void 0,\n    };\n\n    if (this.getOptions().skip) {\n      this.previous.observableQueryOptions = newObservableQueryOptions;\n      return;\n    }\n\n    if (\n      !equal(newObservableQueryOptions, this.previous.observableQueryOptions)\n    ) {\n      this.previous.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable\n        .setOptions(newObservableQueryOptions)\n        // The error will be passed to the child container, so we don't\n        // need to log it here. We could conceivably log something if\n        // an option was set. OTOH we don't log errors w/ the original\n        // query. See https://github.com/apollostack/react-apollo/issues/404\n        .catch(() => {});\n    }\n  }\n\n  // Setup a subscription to watch for Apollo Client `ObservableQuery` changes.\n  // When new data is received, and it doesn't match the data that was used\n  // during the last `QueryData.execute` call (and ultimately the last query\n  // component render), trigger the `onNewData` callback. If not specified,\n  // `onNewData` will fallback to the default `QueryData.onNewData` function\n  // (which usually leads to a query component re-render).\n  private startQuerySubscription(onNewData: () => void = this.onNewData) {\n    if (this.currentSubscription || this.getOptions().skip) return;\n\n    this.currentSubscription = this.currentObservable!.subscribe({\n      next: ({ loading, networkStatus, data }) => {\n        const previousResult = this.previous.result;\n\n        // Make sure we're not attempting to re-render similar results\n        if (\n          previousResult &&\n          previousResult.loading === loading &&\n          previousResult.networkStatus === networkStatus &&\n          equal(previousResult.data, data)\n        ) {\n          return;\n        }\n\n        onNewData();\n      },\n      error: error => {\n        this.resubscribeToQuery();\n        if (!error.hasOwnProperty('graphQLErrors')) throw error;\n\n        const previousResult = this.previous.result;\n        if (\n          (previousResult && previousResult.loading) ||\n          !equal(error, this.previous.error)\n        ) {\n          this.previous.error = error;\n          onNewData();\n        }\n      }\n    });\n  }\n\n  private resubscribeToQuery() {\n    this.removeQuerySubscription();\n\n    // Unfortunately, if `lastError` is set in the current\n    // `observableQuery` when the subscription is re-created,\n    // the subscription will immediately receive the error, which will\n    // cause it to terminate again. To avoid this, we first clear\n    // the last error/result from the `observableQuery` before re-starting\n    // the subscription, and restore it afterwards (so the subscription\n    // has a chance to stay open).\n    const { currentObservable } = this;\n    if (currentObservable) {\n      const last = currentObservable[\"last\"];\n      try {\n        currentObservable.resetLastResults();\n        this.startQuerySubscription();\n      } finally {\n        currentObservable[\"last\"] = last;\n      }\n    }\n  }\n\n  private getExecuteResult(): QueryResult<TData, TVariables> {\n    let result = this.observableQueryFields() as QueryResult<TData, TVariables>;\n    const options = this.getOptions();\n\n    // When skipping a query (ie. we're not querying for data but still want\n    // to render children), make sure the `data` is cleared out and\n    // `loading` is set to `false` (since we aren't loading anything).\n    //\n    // NOTE: We no longer think this is the correct behavior. Skipping should\n    // not automatically set `data` to `undefined`, but instead leave the\n    // previous data in place. In other words, skipping should not mandate\n    // that previously received data is all of a sudden removed. Unfortunately,\n    // changing this is breaking, so we'll have to wait until Apollo Client\n    // 4.0 to address this.\n    if (options.skip) {\n      result = {\n        ...result,\n        data: undefined,\n        error: undefined,\n        loading: false,\n        networkStatus: NetworkStatus.ready,\n        called: true,\n      };\n    } else if (this.currentObservable) {\n      // Fetch the current result (if any) from the store.\n      const currentResult = this.currentObservable.getCurrentResult();\n      const { data, loading, partial, networkStatus, errors } = currentResult;\n      let { error } = currentResult;\n\n      // Until a set naming convention for networkError and graphQLErrors is\n      // decided upon, we map errors (graphQLErrors) to the error options.\n      if (errors && errors.length > 0) {\n        error = new ApolloError({ graphQLErrors: errors });\n      }\n\n      result = {\n        ...result,\n        data,\n        loading,\n        networkStatus,\n        error,\n        called: true\n      };\n\n      if (loading) {\n        // Fall through without modifying result...\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.getLastResult() || ({} as any))\n            .data\n        });\n      } else {\n        const { fetchPolicy } = this.currentObservable.options;\n        const { partialRefetch } = options;\n        if (\n          partialRefetch &&\n          partial &&\n          (!data || Object.keys(data).length === 0) &&\n          fetchPolicy !== 'cache-only'\n        ) {\n          // When a `Query` component is mounted, and a mutation is executed\n          // that returns the same ID as the mounted `Query`, but has less\n          // fields in its result, Apollo Client's `QueryManager` returns the\n          // data as `undefined` since a hit can't be found in the cache.\n          // This can lead to application errors when the UI elements rendered by\n          // the original `Query` component are expecting certain data values to\n          // exist, and they're all of a sudden stripped away. To help avoid\n          // this we'll attempt to refetch the `Query` data.\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n      }\n    }\n\n    result.client = this.client;\n    // Store options as this.previousOptions.\n    this.setOptions(options, true);\n\n    const previousResult = this.previous.result;\n\n    this.previous.loading =\n      previousResult && previousResult.loading || false;\n\n    // Ensure the returned result contains previousData as a separate\n    // property, to give developers the flexibility of leveraging outdated\n    // data while new data is loading from the network. Falling back to\n    // previousResult.previousData when previousResult.data is falsy here\n    // allows result.previousData to persist across multiple results.\n    result.previousData = previousResult &&\n      (previousResult.data || previousResult.previousData);\n\n    this.previous.result = result;\n\n    // Any query errors that exist are now available in `result`, so we'll\n    // remove the original errors from the `ObservableQuery` query store to\n    // make sure they aren't re-displayed on subsequent (potentially error\n    // free) requests/responses.\n    this.currentObservable && this.currentObservable.resetQueryStoreErrors();\n\n    return result;\n  }\n\n  private handleErrorOrCompleted() {\n    if (!this.currentObservable || !this.previous.result) return;\n\n    const { data, loading, error } = this.previous.result;\n\n    if (!loading) {\n      const {\n        query,\n        variables,\n        onCompleted,\n        onError,\n        skip\n      } = this.getOptions();\n\n      // No changes, so we won't call onError/onCompleted.\n      if (\n        this.previousOptions &&\n        !this.previous.loading &&\n        equal(this.previousOptions.query, query) &&\n        equal(this.previousOptions.variables, variables)\n      ) {\n        return;\n      }\n\n      if (onCompleted && !error && !skip) {\n        onCompleted(data as TData);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  }\n\n  private removeQuerySubscription() {\n    if (this.currentSubscription) {\n      this.currentSubscription.unsubscribe();\n      delete this.currentSubscription;\n    }\n  }\n\n  private removeObservable(andDelete: boolean) {\n    if (this.currentObservable) {\n      this.currentObservable[\"tearDownQuery\"]();\n      if (andDelete) {\n        delete this.currentObservable;\n      }\n    }\n  }\n\n  private obsRefetch = (variables?: Partial<TVariables>) =>\n    this.currentObservable?.refetch(variables);\n\n  private obsFetchMore = (\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, TData> &\n      FetchMoreOptions<TData, TVariables>\n  ) => this.currentObservable?.fetchMore(fetchMoreOptions);\n\n  private obsUpdateQuery = <TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: UpdateQueryOptions<TVars>\n    ) => TData\n  ) => this.currentObservable?.updateQuery(mapFn);\n\n  private obsStartPolling = (pollInterval: number) => {\n    this.currentObservable?.startPolling(pollInterval);\n  };\n\n  private obsStopPolling = () => {\n    this.currentObservable?.stopPolling();\n  };\n\n  private obsSubscribeToMore = <\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >\n  ) => this.currentObservable?.subscribeToMore(options);\n\n  private observableQueryFields() {\n    return {\n      variables: this.currentObservable?.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    } as ObservableQueryFields<TData, TVariables>;\n  }\n}\n","import '../../../utilities/globals';\n\nimport { useContext, useEffect, useReducer, useRef } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport {\n  QueryHookOptions,\n  QueryDataOptions,\n  QueryTuple,\n  QueryResult,\n} from '../../types/types';\nimport { QueryData } from '../../data';\nimport { useDeepMemo } from './useDeepMemo';\nimport { OperationVariables } from '../../../core';\nimport { getApolloContext } from '../../context';\nimport { useAfterFastRefresh } from './useAfterFastRefresh';\n\nexport function useBaseQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>,\n  lazy = false\n) {\n  const context = useContext(getApolloContext());\n  const [tick, forceUpdate] = useReducer(x => x + 1, 0);\n  const updatedOptions = options ? { ...options, query } : { query };\n\n  const queryDataRef = useRef<QueryData<TData, TVariables>>();\n  const queryData = queryDataRef.current || (\n    queryDataRef.current = new QueryData<TData, TVariables>({\n      options: updatedOptions as QueryDataOptions<TData, TVariables>,\n      context,\n      onNewData() {\n        if (!queryData.ssrInitiated()) {\n          // When new data is received from the `QueryData` object, we want to\n          // force a re-render to make sure the new data is displayed. We can't\n          // force that re-render if we're already rendering however so to be\n          // safe we'll trigger the re-render in a microtask. In case the\n          // component gets unmounted before this callback fires, we re-check\n          // queryDataRef.current.isMounted before calling forceUpdate().\n          Promise.resolve().then(() => queryDataRef.current && queryDataRef.current.isMounted && forceUpdate());\n        } else {\n          // If we're rendering on the server side we can force an update at\n          // any point.\n          forceUpdate();\n        }\n      }\n    })\n  );\n\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n\n  // `onError` and `onCompleted` callback functions will not always have a\n  // stable identity, so we'll exclude them from the memoization key to\n  // prevent `afterExecute` from being triggered un-necessarily.\n  const memo = {\n    options: {\n      ...updatedOptions,\n      onError: void 0,\n      onCompleted: void 0\n    } as QueryHookOptions<TData, TVariables>,\n    context,\n    tick\n  };\n\n  const result = useDeepMemo(\n    () => (lazy ? queryData.executeLazy() : queryData.execute()),\n    memo\n  );\n\n  const queryResult = lazy\n    ? (result as QueryTuple<TData, TVariables>)[1]\n    : (result as QueryResult<TData, TVariables>);\n\n  if (__DEV__) {\n    // ensure we run an update after refreshing so that we reinitialize\n    useAfterFastRefresh(forceUpdate);\n  }\n\n  useEffect(() => {\n    return () => {\n      queryData.cleanup();\n      // this effect can run multiple times during a fast-refresh\n      // so make sure we clean up the ref\n      queryDataRef.current = void 0;\n    }\n  }, []);\n\n  useEffect(() => queryData.afterExecute({ lazy }), [\n    queryResult.loading,\n    queryResult.networkStatus,\n    queryResult.error,\n    queryResult.data,\n    queryData.currentObservable,\n  ]);\n\n  return result;\n}\n","import { useRef } from 'react';\nimport { equal } from '@wry/equality';\n\n/**\n * Memoize a result using deep equality. This hook has two advantages over\n * React.useMemo: it uses deep equality to compare memo keys, and it guarantees\n * that the memo function will only be called if the keys are unequal.\n * React.useMemo cannot be relied on to do this, since it is only a performance\n * optimization (see https://reactjs.org/docs/hooks-reference.html#usememo).\n */\nexport function useDeepMemo<TKey, TValue>(\n  memoFn: () => TValue,\n  key: TKey\n): TValue {\n  const ref = useRef<{ key: TKey; value: TValue }>();\n\n  if (!ref.current || !equal(key, ref.current.key)) {\n    ref.current = { key, value: memoFn() };\n  }\n\n  return ref.current.value;\n}\n","import '../../../utilities/globals';\nimport { useEffect, useRef } from \"react\";\n\n/**\n * This hook allows running a function only immediately after a react\n * fast refresh or live reload.\n *\n * Useful in order to ensure that we can reinitialize things that have been\n * disposed by cleanup functions in `useEffect`.\n * @param effectFn a function to run immediately after a fast refresh\n */\nexport function useAfterFastRefresh(effectFn: () => unknown) {\n  if (__DEV__) {\n    const didRefresh = useRef(false);\n    useEffect(() => {\n      return () => {\n        // Detect fast refresh, only runs multiple times in fast refresh\n        didRefresh.current = true;\n      };\n    }, []);\n\n    useEffect(() => {\n      if (didRefresh.current === true) {\n        // This block only runs after a fast refresh\n        didRefresh.current = false;\n        effectFn();\n      }\n    }, [])\n  }\n}\n","import { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { QueryHookOptions, QueryResult } from '../types/types';\nimport { useBaseQuery } from './utils/useBaseQuery';\nimport { OperationVariables } from '../../core';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, alpha } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: alpha(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: alpha(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: alpha(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: alpha(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If false, the chip will not be clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the chip should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.body1, {\n      lineHeight: 1,\n      padding: 0,\n      '&$focused': {\n        color: theme.palette.primary.main\n      },\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {\n      '&$focused': {\n        color: theme.palette.secondary.main\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Styles applied to the asterisk element. */\n    asterisk: {\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }\n  };\n};\nvar FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'label' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      required = props.required,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required),\n    ref: ref\n  }, other), children, fcs.required && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    className: clsx(classes.asterisk, fcs.error && classes.error)\n  }, \"\\u2009\", '*'));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormLabel'\n})(FormLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport FormLabel from '../FormLabel';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      transformOrigin: 'top left'\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Pseudo-class applied to the asterisk element. */\n    asterisk: {},\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      // slight alteration to spec spacing to match visual spec result\n      transform: 'translate(0, 24px) scale(1)'\n    },\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      // Compensation for the `Input.inputDense` style.\n      transform: 'translate(0, 21px) scale(1)'\n    },\n\n    /* Styles applied to the `input` element if `shrink={true}`. */\n    shrink: {\n      transform: 'translate(0, 1.5px) scale(0.75)',\n      transformOrigin: 'top left'\n    },\n\n    /* Styles applied to the `input` element if `disableAnimation={false}`. */\n    animated: {\n      transition: theme.transitions.create(['color', 'transform'], {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"`. */\n    filled: {\n      // Chrome's autofill feature gives the input field a yellow background.\n      // Since the input field is behind the label in the HTML tree,\n      // the input field is drawn last and hides the label with an opaque background color.\n      // zIndex: 1 will raise the label above opaque background-colors of input.\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(12px, 20px) scale(1)',\n      '&$marginDense': {\n        transform: 'translate(12px, 17px) scale(1)'\n      },\n      '&$shrink': {\n        transform: 'translate(12px, 10px) scale(0.75)',\n        '&$marginDense': {\n          transform: 'translate(12px, 7px) scale(0.75)'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      // see comment above on filled.zIndex\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(14px, 20px) scale(1)',\n      '&$marginDense': {\n        transform: 'translate(14px, 12px) scale(1)'\n      },\n      '&$shrink': {\n        transform: 'translate(14px, -6px) scale(0.75)'\n      }\n    }\n  };\n};\nvar InputLabel = /*#__PURE__*/React.forwardRef(function InputLabel(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$disableAnimati = props.disableAnimation,\n      disableAnimation = _props$disableAnimati === void 0 ? false : _props$disableAnimati,\n      margin = props.margin,\n      shrinkProp = props.shrink,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableAnimation\", \"margin\", \"shrink\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var shrink = shrinkProp;\n\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['margin', 'variant']\n  });\n  return /*#__PURE__*/React.createElement(FormLabel, _extends({\n    \"data-shrink\": shrink,\n    className: clsx(classes.root, className, muiFormControl && classes.formControl, !disableAnimation && classes.animated, shrink && classes.shrink, fcs.margin === 'dense' && classes.marginDense, {\n      'filled': classes.filled,\n      'outlined': classes.outlined\n    }[fcs.variant]),\n    classes: {\n      focused: classes.focused,\n      disabled: classes.disabled,\n      error: classes.error,\n      required: classes.required,\n      asterisk: classes.asterisk\n    },\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The contents of the `InputLabel`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * If `true`, the transition animation is disabled.\n   */\n  disableAnimation: PropTypes.bool,\n\n  /**\n   * If `true`, apply disabled class.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * if `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * If `true`, the label is shrunk.\n   */\n  shrink: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputLabel'\n})(InputLabel);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);"],"sourceRoot":""}